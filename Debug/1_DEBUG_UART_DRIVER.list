
1_DEBUG_UART_DRIVER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001328  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  080014c8  080014c8  000114c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800157c  0800157c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800157c  0800157c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800157c  0800157c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800157c  0800157c  0001157c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001580  08001580  00011580  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001584  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080015e8  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080015e8  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d8b  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000434  00000000  00000000  00020e1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000148  00000000  00000000  00021258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  000213a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f990  00000000  00000000  000214a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000198a  00000000  00000000  00030e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000552e4  00000000  00000000  000327ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00087a9e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bd4  00000000  00000000  00087af0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080014b0 	.word	0x080014b0

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080014b0 	.word	0x080014b0

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__io_putchar>:
#define UART_BAUDRATE	115200
#define CR1_TE			(1U<<3)
#define CR1_RE			(1U<<2)

int __io_putchar(int ch)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
	debug_usart2_write(ch);
 8000288:	6878      	ldr	r0, [r7, #4]
 800028a:	f000 f84d 	bl	8000328 <debug_usart2_write>
	return ch;
 800028e:	687b      	ldr	r3, [r7, #4]
}
 8000290:	4618      	mov	r0, r3
 8000292:	3708      	adds	r7, #8
 8000294:	46bd      	mov	sp, r7
 8000296:	bd80      	pop	{r7, pc}

08000298 <debug_usart2_init>:

//APB1
void debug_usart2_init(void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	/***********Enabling Clock Access***********/
	/*Enable clock access to the USART pins on appropriate GPIO port (port A)*/
	RCC->AHB1ENR |= GPIOAEN;
 800029c:	4b1e      	ldr	r3, [pc, #120]	; (8000318 <debug_usart2_init+0x80>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a1d      	ldr	r2, [pc, #116]	; (8000318 <debug_usart2_init+0x80>)
 80002a2:	f043 0301 	orr.w	r3, r3, #1
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30

	/***********Configuring GPIO Pins for Alternate Function***********/
	/*Set PA2 mode to alt_func mode-->MODER3 = 2 0b10
	 * later change to (PinMode << (2 * PinNumber))*/
	GPIOA->MODER |= (2 << GPIO_MODER_MODER2_Pos); //4th bit
 80002a8:	4b1c      	ldr	r3, [pc, #112]	; (800031c <debug_usart2_init+0x84>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	4a1b      	ldr	r2, [pc, #108]	; (800031c <debug_usart2_init+0x84>)
 80002ae:	f043 0320 	orr.w	r3, r3, #32
 80002b2:	6013      	str	r3, [r2, #0]
	/*Set PA3 mode to alt_func mode-->MODER3 = 2*/
	GPIOA->MODER |= (2 << GPIO_MODER_MODER3_Pos); //6th bit
 80002b4:	4b19      	ldr	r3, [pc, #100]	; (800031c <debug_usart2_init+0x84>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	4a18      	ldr	r2, [pc, #96]	; (800031c <debug_usart2_init+0x84>)
 80002ba:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002be:	6013      	str	r3, [r2, #0]

	/*Set PA2 mode to alt_func type to USART2_TX (AF07 = 0111)*/
	GPIOA->AFR[0] |= (AF7 << GPIO_AFRL_AFSEL2_Pos);
 80002c0:	4b16      	ldr	r3, [pc, #88]	; (800031c <debug_usart2_init+0x84>)
 80002c2:	6a1b      	ldr	r3, [r3, #32]
 80002c4:	4a15      	ldr	r2, [pc, #84]	; (800031c <debug_usart2_init+0x84>)
 80002c6:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80002ca:	6213      	str	r3, [r2, #32]
	/*Set PA3 mode to alt_func type to USART2_RX (AF07 = 0111)*/
	GPIOA->AFR[0] |= (AF7 << GPIO_AFRL_AFSEL3_Pos);
 80002cc:	4b13      	ldr	r3, [pc, #76]	; (800031c <debug_usart2_init+0x84>)
 80002ce:	6a1b      	ldr	r3, [r3, #32]
 80002d0:	4a12      	ldr	r2, [pc, #72]	; (800031c <debug_usart2_init+0x84>)
 80002d2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 80002d6:	6213      	str	r3, [r2, #32]

	/***********Configure USART Module***********/
	/*Enable clock access to USART Module*/
	RCC->APB1ENR |= RCC_APB1ENR_USART2EN_Msk;  //(0x1UL << RCC_APB1ENR_USART2EN_Pos, where Pos = 17U) )
 80002d8:	4b0f      	ldr	r3, [pc, #60]	; (8000318 <debug_usart2_init+0x80>)
 80002da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002dc:	4a0e      	ldr	r2, [pc, #56]	; (8000318 <debug_usart2_init+0x80>)
 80002de:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002e2:	6413      	str	r3, [r2, #64]	; 0x40

	/*Disable USART Module*/
	USART2->CR1 &= ~CR1_UE;
 80002e4:	4b0e      	ldr	r3, [pc, #56]	; (8000320 <debug_usart2_init+0x88>)
 80002e6:	68db      	ldr	r3, [r3, #12]
 80002e8:	4a0d      	ldr	r2, [pc, #52]	; (8000320 <debug_usart2_init+0x88>)
 80002ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80002ee:	60d3      	str	r3, [r2, #12]

	/*Set USART baudrate - 115200*/
	USART2->BRR = compute_usart_baud(APB1_CLK,UART_BAUDRATE);
 80002f0:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80002f4:	480b      	ldr	r0, [pc, #44]	; (8000324 <debug_usart2_init+0x8c>)
 80002f6:	f000 f82f 	bl	8000358 <compute_usart_baud>
 80002fa:	4603      	mov	r3, r0
 80002fc:	461a      	mov	r2, r3
 80002fe:	4b08      	ldr	r3, [pc, #32]	; (8000320 <debug_usart2_init+0x88>)
 8000300:	609a      	str	r2, [r3, #8]

	/*Set transfer direction*/
	USART2->CR1 = (CR1_TE | CR1_RE);
 8000302:	4b07      	ldr	r3, [pc, #28]	; (8000320 <debug_usart2_init+0x88>)
 8000304:	220c      	movs	r2, #12
 8000306:	60da      	str	r2, [r3, #12]

	/*Enable USART2 interrupt in NVIC - this is a 1/2 steps*/
	/* Will do later*/

	/*Enable USART module*/
	USART2->CR1 |= CR1_UE;
 8000308:	4b05      	ldr	r3, [pc, #20]	; (8000320 <debug_usart2_init+0x88>)
 800030a:	68db      	ldr	r3, [r3, #12]
 800030c:	4a04      	ldr	r2, [pc, #16]	; (8000320 <debug_usart2_init+0x88>)
 800030e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000312:	60d3      	str	r3, [r2, #12]

}
 8000314:	bf00      	nop
 8000316:	bd80      	pop	{r7, pc}
 8000318:	40023800 	.word	0x40023800
 800031c:	40020000 	.word	0x40020000
 8000320:	40004400 	.word	0x40004400
 8000324:	00f42400 	.word	0x00f42400

08000328 <debug_usart2_write>:

void debug_usart2_write(int ch)
{
 8000328:	b480      	push	{r7}
 800032a:	b083      	sub	sp, #12
 800032c:	af00      	add	r7, sp, #0
 800032e:	6078      	str	r0, [r7, #4]
	 * if the TXE bit of the SR is 1,
	 * that means data has been sent to the shift register and is about to be sent out
	 * Therefore the while loop is skipped and the program writes data
	 * if TXE == 0, data is still in the transmit data register and the program hangs
	 * at the while loop until TXE == 1*/
	while(!(USART2->SR & SR_TXE));
 8000330:	bf00      	nop
 8000332:	4b08      	ldr	r3, [pc, #32]	; (8000354 <debug_usart2_write+0x2c>)
 8000334:	681b      	ldr	r3, [r3, #0]
 8000336:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800033a:	2b00      	cmp	r3, #0
 800033c:	d0f9      	beq.n	8000332 <debug_usart2_write+0xa>

	/* Write to transmit data register*/
	USART2->DR = (ch & 0xFF);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a04      	ldr	r2, [pc, #16]	; (8000354 <debug_usart2_write+0x2c>)
 8000342:	b2db      	uxtb	r3, r3
 8000344:	6053      	str	r3, [r2, #4]
}
 8000346:	bf00      	nop
 8000348:	370c      	adds	r7, #12
 800034a:	46bd      	mov	sp, r7
 800034c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	40004400 	.word	0x40004400

08000358 <compute_usart_baud>:

/* No need to use this function outside of this file therefore set to static*/
static uint16_t compute_usart_baud(uint32_t periph_clk, uint32_t baudrate)
{
 8000358:	b480      	push	{r7}
 800035a:	b083      	sub	sp, #12
 800035c:	af00      	add	r7, sp, #0
 800035e:	6078      	str	r0, [r7, #4]
 8000360:	6039      	str	r1, [r7, #0]
	return ((periph_clk + (baudrate/2U))/baudrate);
 8000362:	683b      	ldr	r3, [r7, #0]
 8000364:	085a      	lsrs	r2, r3, #1
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	441a      	add	r2, r3
 800036a:	683b      	ldr	r3, [r7, #0]
 800036c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000370:	b29b      	uxth	r3, r3

}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr
	...

08000380 <main>:
#include "esp82xx_driver.h"

void debug_usart2_init();

int main (void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
	/**/
	debug_usart2_init();
 8000384:	f7ff ff88 	bl	8000298 <debug_usart2_init>

	while(1)
	{
		printf("hello from debug USART\n\r");
 8000388:	4801      	ldr	r0, [pc, #4]	; (8000390 <main+0x10>)
 800038a:	f000 f903 	bl	8000594 <iprintf>
 800038e:	e7fb      	b.n	8000388 <main+0x8>
 8000390:	080014c8 	.word	0x080014c8

08000394 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	b086      	sub	sp, #24
 8000398:	af00      	add	r7, sp, #0
 800039a:	60f8      	str	r0, [r7, #12]
 800039c:	60b9      	str	r1, [r7, #8]
 800039e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a0:	2300      	movs	r3, #0
 80003a2:	617b      	str	r3, [r7, #20]
 80003a4:	e00a      	b.n	80003bc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003a6:	f3af 8000 	nop.w
 80003aa:	4601      	mov	r1, r0
 80003ac:	68bb      	ldr	r3, [r7, #8]
 80003ae:	1c5a      	adds	r2, r3, #1
 80003b0:	60ba      	str	r2, [r7, #8]
 80003b2:	b2ca      	uxtb	r2, r1
 80003b4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003b6:	697b      	ldr	r3, [r7, #20]
 80003b8:	3301      	adds	r3, #1
 80003ba:	617b      	str	r3, [r7, #20]
 80003bc:	697a      	ldr	r2, [r7, #20]
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	429a      	cmp	r2, r3
 80003c2:	dbf0      	blt.n	80003a6 <_read+0x12>
	}

return len;
 80003c4:	687b      	ldr	r3, [r7, #4]
}
 80003c6:	4618      	mov	r0, r3
 80003c8:	3718      	adds	r7, #24
 80003ca:	46bd      	mov	sp, r7
 80003cc:	bd80      	pop	{r7, pc}

080003ce <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ce:	b580      	push	{r7, lr}
 80003d0:	b086      	sub	sp, #24
 80003d2:	af00      	add	r7, sp, #0
 80003d4:	60f8      	str	r0, [r7, #12]
 80003d6:	60b9      	str	r1, [r7, #8]
 80003d8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003da:	2300      	movs	r3, #0
 80003dc:	617b      	str	r3, [r7, #20]
 80003de:	e009      	b.n	80003f4 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80003e0:	68bb      	ldr	r3, [r7, #8]
 80003e2:	1c5a      	adds	r2, r3, #1
 80003e4:	60ba      	str	r2, [r7, #8]
 80003e6:	781b      	ldrb	r3, [r3, #0]
 80003e8:	4618      	mov	r0, r3
 80003ea:	f7ff ff49 	bl	8000280 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ee:	697b      	ldr	r3, [r7, #20]
 80003f0:	3301      	adds	r3, #1
 80003f2:	617b      	str	r3, [r7, #20]
 80003f4:	697a      	ldr	r2, [r7, #20]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	dbf1      	blt.n	80003e0 <_write+0x12>
	}
	return len;
 80003fc:	687b      	ldr	r3, [r7, #4]
}
 80003fe:	4618      	mov	r0, r3
 8000400:	3718      	adds	r7, #24
 8000402:	46bd      	mov	sp, r7
 8000404:	bd80      	pop	{r7, pc}

08000406 <_close>:

int _close(int file)
{
 8000406:	b480      	push	{r7}
 8000408:	b083      	sub	sp, #12
 800040a:	af00      	add	r7, sp, #0
 800040c:	6078      	str	r0, [r7, #4]
	return -1;
 800040e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000412:	4618      	mov	r0, r3
 8000414:	370c      	adds	r7, #12
 8000416:	46bd      	mov	sp, r7
 8000418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800041c:	4770      	bx	lr

0800041e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800041e:	b480      	push	{r7}
 8000420:	b083      	sub	sp, #12
 8000422:	af00      	add	r7, sp, #0
 8000424:	6078      	str	r0, [r7, #4]
 8000426:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000428:	683b      	ldr	r3, [r7, #0]
 800042a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800042e:	605a      	str	r2, [r3, #4]
	return 0;
 8000430:	2300      	movs	r3, #0
}
 8000432:	4618      	mov	r0, r3
 8000434:	370c      	adds	r7, #12
 8000436:	46bd      	mov	sp, r7
 8000438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043c:	4770      	bx	lr

0800043e <_isatty>:

int _isatty(int file)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
	return 1;
 8000446:	2301      	movs	r3, #1
}
 8000448:	4618      	mov	r0, r3
 800044a:	370c      	adds	r7, #12
 800044c:	46bd      	mov	sp, r7
 800044e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000452:	4770      	bx	lr

08000454 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000454:	b480      	push	{r7}
 8000456:	b085      	sub	sp, #20
 8000458:	af00      	add	r7, sp, #0
 800045a:	60f8      	str	r0, [r7, #12]
 800045c:	60b9      	str	r1, [r7, #8]
 800045e:	607a      	str	r2, [r7, #4]
	return 0;
 8000460:	2300      	movs	r3, #0
}
 8000462:	4618      	mov	r0, r3
 8000464:	3714      	adds	r7, #20
 8000466:	46bd      	mov	sp, r7
 8000468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046c:	4770      	bx	lr
	...

08000470 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000470:	b580      	push	{r7, lr}
 8000472:	b086      	sub	sp, #24
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000478:	4a14      	ldr	r2, [pc, #80]	; (80004cc <_sbrk+0x5c>)
 800047a:	4b15      	ldr	r3, [pc, #84]	; (80004d0 <_sbrk+0x60>)
 800047c:	1ad3      	subs	r3, r2, r3
 800047e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000480:	697b      	ldr	r3, [r7, #20]
 8000482:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000484:	4b13      	ldr	r3, [pc, #76]	; (80004d4 <_sbrk+0x64>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	2b00      	cmp	r3, #0
 800048a:	d102      	bne.n	8000492 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800048c:	4b11      	ldr	r3, [pc, #68]	; (80004d4 <_sbrk+0x64>)
 800048e:	4a12      	ldr	r2, [pc, #72]	; (80004d8 <_sbrk+0x68>)
 8000490:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000492:	4b10      	ldr	r3, [pc, #64]	; (80004d4 <_sbrk+0x64>)
 8000494:	681a      	ldr	r2, [r3, #0]
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	4413      	add	r3, r2
 800049a:	693a      	ldr	r2, [r7, #16]
 800049c:	429a      	cmp	r2, r3
 800049e:	d207      	bcs.n	80004b0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004a0:	f000 f846 	bl	8000530 <__errno>
 80004a4:	4603      	mov	r3, r0
 80004a6:	220c      	movs	r2, #12
 80004a8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004aa:	f04f 33ff 	mov.w	r3, #4294967295
 80004ae:	e009      	b.n	80004c4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004b0:	4b08      	ldr	r3, [pc, #32]	; (80004d4 <_sbrk+0x64>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004b6:	4b07      	ldr	r3, [pc, #28]	; (80004d4 <_sbrk+0x64>)
 80004b8:	681a      	ldr	r2, [r3, #0]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	4413      	add	r3, r2
 80004be:	4a05      	ldr	r2, [pc, #20]	; (80004d4 <_sbrk+0x64>)
 80004c0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004c2:	68fb      	ldr	r3, [r7, #12]
}
 80004c4:	4618      	mov	r0, r3
 80004c6:	3718      	adds	r7, #24
 80004c8:	46bd      	mov	sp, r7
 80004ca:	bd80      	pop	{r7, pc}
 80004cc:	20020000 	.word	0x20020000
 80004d0:	00000400 	.word	0x00000400
 80004d4:	20000080 	.word	0x20000080
 80004d8:	20000098 	.word	0x20000098

080004dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004dc:	480d      	ldr	r0, [pc, #52]	; (8000514 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004e4:	480c      	ldr	r0, [pc, #48]	; (8000518 <LoopForever+0x6>)
  ldr r1, =_edata
 80004e6:	490d      	ldr	r1, [pc, #52]	; (800051c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004e8:	4a0d      	ldr	r2, [pc, #52]	; (8000520 <LoopForever+0xe>)
  movs r3, #0
 80004ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004ec:	e002      	b.n	80004f4 <LoopCopyDataInit>

080004ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004f2:	3304      	adds	r3, #4

080004f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004f8:	d3f9      	bcc.n	80004ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004fa:	4a0a      	ldr	r2, [pc, #40]	; (8000524 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004fc:	4c0a      	ldr	r4, [pc, #40]	; (8000528 <LoopForever+0x16>)
  movs r3, #0
 80004fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000500:	e001      	b.n	8000506 <LoopFillZerobss>

08000502 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000502:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000504:	3204      	adds	r2, #4

08000506 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000506:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000508:	d3fb      	bcc.n	8000502 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800050a:	f000 f817 	bl	800053c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800050e:	f7ff ff37 	bl	8000380 <main>

08000512 <LoopForever>:

LoopForever:
    b LoopForever
 8000512:	e7fe      	b.n	8000512 <LoopForever>
  ldr   r0, =_estack
 8000514:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000518:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800051c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000520:	08001584 	.word	0x08001584
  ldr r2, =_sbss
 8000524:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000528:	20000094 	.word	0x20000094

0800052c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800052c:	e7fe      	b.n	800052c <ADC_IRQHandler>
	...

08000530 <__errno>:
 8000530:	4b01      	ldr	r3, [pc, #4]	; (8000538 <__errno+0x8>)
 8000532:	6818      	ldr	r0, [r3, #0]
 8000534:	4770      	bx	lr
 8000536:	bf00      	nop
 8000538:	20000000 	.word	0x20000000

0800053c <__libc_init_array>:
 800053c:	b570      	push	{r4, r5, r6, lr}
 800053e:	4d0d      	ldr	r5, [pc, #52]	; (8000574 <__libc_init_array+0x38>)
 8000540:	4c0d      	ldr	r4, [pc, #52]	; (8000578 <__libc_init_array+0x3c>)
 8000542:	1b64      	subs	r4, r4, r5
 8000544:	10a4      	asrs	r4, r4, #2
 8000546:	2600      	movs	r6, #0
 8000548:	42a6      	cmp	r6, r4
 800054a:	d109      	bne.n	8000560 <__libc_init_array+0x24>
 800054c:	4d0b      	ldr	r5, [pc, #44]	; (800057c <__libc_init_array+0x40>)
 800054e:	4c0c      	ldr	r4, [pc, #48]	; (8000580 <__libc_init_array+0x44>)
 8000550:	f000 ffae 	bl	80014b0 <_init>
 8000554:	1b64      	subs	r4, r4, r5
 8000556:	10a4      	asrs	r4, r4, #2
 8000558:	2600      	movs	r6, #0
 800055a:	42a6      	cmp	r6, r4
 800055c:	d105      	bne.n	800056a <__libc_init_array+0x2e>
 800055e:	bd70      	pop	{r4, r5, r6, pc}
 8000560:	f855 3b04 	ldr.w	r3, [r5], #4
 8000564:	4798      	blx	r3
 8000566:	3601      	adds	r6, #1
 8000568:	e7ee      	b.n	8000548 <__libc_init_array+0xc>
 800056a:	f855 3b04 	ldr.w	r3, [r5], #4
 800056e:	4798      	blx	r3
 8000570:	3601      	adds	r6, #1
 8000572:	e7f2      	b.n	800055a <__libc_init_array+0x1e>
 8000574:	0800157c 	.word	0x0800157c
 8000578:	0800157c 	.word	0x0800157c
 800057c:	0800157c 	.word	0x0800157c
 8000580:	08001580 	.word	0x08001580

08000584 <memset>:
 8000584:	4402      	add	r2, r0
 8000586:	4603      	mov	r3, r0
 8000588:	4293      	cmp	r3, r2
 800058a:	d100      	bne.n	800058e <memset+0xa>
 800058c:	4770      	bx	lr
 800058e:	f803 1b01 	strb.w	r1, [r3], #1
 8000592:	e7f9      	b.n	8000588 <memset+0x4>

08000594 <iprintf>:
 8000594:	b40f      	push	{r0, r1, r2, r3}
 8000596:	4b0a      	ldr	r3, [pc, #40]	; (80005c0 <iprintf+0x2c>)
 8000598:	b513      	push	{r0, r1, r4, lr}
 800059a:	681c      	ldr	r4, [r3, #0]
 800059c:	b124      	cbz	r4, 80005a8 <iprintf+0x14>
 800059e:	69a3      	ldr	r3, [r4, #24]
 80005a0:	b913      	cbnz	r3, 80005a8 <iprintf+0x14>
 80005a2:	4620      	mov	r0, r4
 80005a4:	f000 f866 	bl	8000674 <__sinit>
 80005a8:	ab05      	add	r3, sp, #20
 80005aa:	9a04      	ldr	r2, [sp, #16]
 80005ac:	68a1      	ldr	r1, [r4, #8]
 80005ae:	9301      	str	r3, [sp, #4]
 80005b0:	4620      	mov	r0, r4
 80005b2:	f000 f9bd 	bl	8000930 <_vfiprintf_r>
 80005b6:	b002      	add	sp, #8
 80005b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005bc:	b004      	add	sp, #16
 80005be:	4770      	bx	lr
 80005c0:	20000000 	.word	0x20000000

080005c4 <std>:
 80005c4:	2300      	movs	r3, #0
 80005c6:	b510      	push	{r4, lr}
 80005c8:	4604      	mov	r4, r0
 80005ca:	e9c0 3300 	strd	r3, r3, [r0]
 80005ce:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80005d2:	6083      	str	r3, [r0, #8]
 80005d4:	8181      	strh	r1, [r0, #12]
 80005d6:	6643      	str	r3, [r0, #100]	; 0x64
 80005d8:	81c2      	strh	r2, [r0, #14]
 80005da:	6183      	str	r3, [r0, #24]
 80005dc:	4619      	mov	r1, r3
 80005de:	2208      	movs	r2, #8
 80005e0:	305c      	adds	r0, #92	; 0x5c
 80005e2:	f7ff ffcf 	bl	8000584 <memset>
 80005e6:	4b05      	ldr	r3, [pc, #20]	; (80005fc <std+0x38>)
 80005e8:	6263      	str	r3, [r4, #36]	; 0x24
 80005ea:	4b05      	ldr	r3, [pc, #20]	; (8000600 <std+0x3c>)
 80005ec:	62a3      	str	r3, [r4, #40]	; 0x28
 80005ee:	4b05      	ldr	r3, [pc, #20]	; (8000604 <std+0x40>)
 80005f0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80005f2:	4b05      	ldr	r3, [pc, #20]	; (8000608 <std+0x44>)
 80005f4:	6224      	str	r4, [r4, #32]
 80005f6:	6323      	str	r3, [r4, #48]	; 0x30
 80005f8:	bd10      	pop	{r4, pc}
 80005fa:	bf00      	nop
 80005fc:	08000ed9 	.word	0x08000ed9
 8000600:	08000efb 	.word	0x08000efb
 8000604:	08000f33 	.word	0x08000f33
 8000608:	08000f57 	.word	0x08000f57

0800060c <_cleanup_r>:
 800060c:	4901      	ldr	r1, [pc, #4]	; (8000614 <_cleanup_r+0x8>)
 800060e:	f000 b8af 	b.w	8000770 <_fwalk_reent>
 8000612:	bf00      	nop
 8000614:	08001231 	.word	0x08001231

08000618 <__sfmoreglue>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	2268      	movs	r2, #104	; 0x68
 800061c:	1e4d      	subs	r5, r1, #1
 800061e:	4355      	muls	r5, r2
 8000620:	460e      	mov	r6, r1
 8000622:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000626:	f000 f8e5 	bl	80007f4 <_malloc_r>
 800062a:	4604      	mov	r4, r0
 800062c:	b140      	cbz	r0, 8000640 <__sfmoreglue+0x28>
 800062e:	2100      	movs	r1, #0
 8000630:	e9c0 1600 	strd	r1, r6, [r0]
 8000634:	300c      	adds	r0, #12
 8000636:	60a0      	str	r0, [r4, #8]
 8000638:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800063c:	f7ff ffa2 	bl	8000584 <memset>
 8000640:	4620      	mov	r0, r4
 8000642:	bd70      	pop	{r4, r5, r6, pc}

08000644 <__sfp_lock_acquire>:
 8000644:	4801      	ldr	r0, [pc, #4]	; (800064c <__sfp_lock_acquire+0x8>)
 8000646:	f000 b8b3 	b.w	80007b0 <__retarget_lock_acquire_recursive>
 800064a:	bf00      	nop
 800064c:	20000085 	.word	0x20000085

08000650 <__sfp_lock_release>:
 8000650:	4801      	ldr	r0, [pc, #4]	; (8000658 <__sfp_lock_release+0x8>)
 8000652:	f000 b8ae 	b.w	80007b2 <__retarget_lock_release_recursive>
 8000656:	bf00      	nop
 8000658:	20000085 	.word	0x20000085

0800065c <__sinit_lock_acquire>:
 800065c:	4801      	ldr	r0, [pc, #4]	; (8000664 <__sinit_lock_acquire+0x8>)
 800065e:	f000 b8a7 	b.w	80007b0 <__retarget_lock_acquire_recursive>
 8000662:	bf00      	nop
 8000664:	20000086 	.word	0x20000086

08000668 <__sinit_lock_release>:
 8000668:	4801      	ldr	r0, [pc, #4]	; (8000670 <__sinit_lock_release+0x8>)
 800066a:	f000 b8a2 	b.w	80007b2 <__retarget_lock_release_recursive>
 800066e:	bf00      	nop
 8000670:	20000086 	.word	0x20000086

08000674 <__sinit>:
 8000674:	b510      	push	{r4, lr}
 8000676:	4604      	mov	r4, r0
 8000678:	f7ff fff0 	bl	800065c <__sinit_lock_acquire>
 800067c:	69a3      	ldr	r3, [r4, #24]
 800067e:	b11b      	cbz	r3, 8000688 <__sinit+0x14>
 8000680:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000684:	f7ff bff0 	b.w	8000668 <__sinit_lock_release>
 8000688:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800068c:	6523      	str	r3, [r4, #80]	; 0x50
 800068e:	4b13      	ldr	r3, [pc, #76]	; (80006dc <__sinit+0x68>)
 8000690:	4a13      	ldr	r2, [pc, #76]	; (80006e0 <__sinit+0x6c>)
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	62a2      	str	r2, [r4, #40]	; 0x28
 8000696:	42a3      	cmp	r3, r4
 8000698:	bf04      	itt	eq
 800069a:	2301      	moveq	r3, #1
 800069c:	61a3      	streq	r3, [r4, #24]
 800069e:	4620      	mov	r0, r4
 80006a0:	f000 f820 	bl	80006e4 <__sfp>
 80006a4:	6060      	str	r0, [r4, #4]
 80006a6:	4620      	mov	r0, r4
 80006a8:	f000 f81c 	bl	80006e4 <__sfp>
 80006ac:	60a0      	str	r0, [r4, #8]
 80006ae:	4620      	mov	r0, r4
 80006b0:	f000 f818 	bl	80006e4 <__sfp>
 80006b4:	2200      	movs	r2, #0
 80006b6:	60e0      	str	r0, [r4, #12]
 80006b8:	2104      	movs	r1, #4
 80006ba:	6860      	ldr	r0, [r4, #4]
 80006bc:	f7ff ff82 	bl	80005c4 <std>
 80006c0:	68a0      	ldr	r0, [r4, #8]
 80006c2:	2201      	movs	r2, #1
 80006c4:	2109      	movs	r1, #9
 80006c6:	f7ff ff7d 	bl	80005c4 <std>
 80006ca:	68e0      	ldr	r0, [r4, #12]
 80006cc:	2202      	movs	r2, #2
 80006ce:	2112      	movs	r1, #18
 80006d0:	f7ff ff78 	bl	80005c4 <std>
 80006d4:	2301      	movs	r3, #1
 80006d6:	61a3      	str	r3, [r4, #24]
 80006d8:	e7d2      	b.n	8000680 <__sinit+0xc>
 80006da:	bf00      	nop
 80006dc:	080014e4 	.word	0x080014e4
 80006e0:	0800060d 	.word	0x0800060d

080006e4 <__sfp>:
 80006e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e6:	4607      	mov	r7, r0
 80006e8:	f7ff ffac 	bl	8000644 <__sfp_lock_acquire>
 80006ec:	4b1e      	ldr	r3, [pc, #120]	; (8000768 <__sfp+0x84>)
 80006ee:	681e      	ldr	r6, [r3, #0]
 80006f0:	69b3      	ldr	r3, [r6, #24]
 80006f2:	b913      	cbnz	r3, 80006fa <__sfp+0x16>
 80006f4:	4630      	mov	r0, r6
 80006f6:	f7ff ffbd 	bl	8000674 <__sinit>
 80006fa:	3648      	adds	r6, #72	; 0x48
 80006fc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000700:	3b01      	subs	r3, #1
 8000702:	d503      	bpl.n	800070c <__sfp+0x28>
 8000704:	6833      	ldr	r3, [r6, #0]
 8000706:	b30b      	cbz	r3, 800074c <__sfp+0x68>
 8000708:	6836      	ldr	r6, [r6, #0]
 800070a:	e7f7      	b.n	80006fc <__sfp+0x18>
 800070c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000710:	b9d5      	cbnz	r5, 8000748 <__sfp+0x64>
 8000712:	4b16      	ldr	r3, [pc, #88]	; (800076c <__sfp+0x88>)
 8000714:	60e3      	str	r3, [r4, #12]
 8000716:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800071a:	6665      	str	r5, [r4, #100]	; 0x64
 800071c:	f000 f847 	bl	80007ae <__retarget_lock_init_recursive>
 8000720:	f7ff ff96 	bl	8000650 <__sfp_lock_release>
 8000724:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000728:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800072c:	6025      	str	r5, [r4, #0]
 800072e:	61a5      	str	r5, [r4, #24]
 8000730:	2208      	movs	r2, #8
 8000732:	4629      	mov	r1, r5
 8000734:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000738:	f7ff ff24 	bl	8000584 <memset>
 800073c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000740:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000744:	4620      	mov	r0, r4
 8000746:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000748:	3468      	adds	r4, #104	; 0x68
 800074a:	e7d9      	b.n	8000700 <__sfp+0x1c>
 800074c:	2104      	movs	r1, #4
 800074e:	4638      	mov	r0, r7
 8000750:	f7ff ff62 	bl	8000618 <__sfmoreglue>
 8000754:	4604      	mov	r4, r0
 8000756:	6030      	str	r0, [r6, #0]
 8000758:	2800      	cmp	r0, #0
 800075a:	d1d5      	bne.n	8000708 <__sfp+0x24>
 800075c:	f7ff ff78 	bl	8000650 <__sfp_lock_release>
 8000760:	230c      	movs	r3, #12
 8000762:	603b      	str	r3, [r7, #0]
 8000764:	e7ee      	b.n	8000744 <__sfp+0x60>
 8000766:	bf00      	nop
 8000768:	080014e4 	.word	0x080014e4
 800076c:	ffff0001 	.word	0xffff0001

08000770 <_fwalk_reent>:
 8000770:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000774:	4606      	mov	r6, r0
 8000776:	4688      	mov	r8, r1
 8000778:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800077c:	2700      	movs	r7, #0
 800077e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000782:	f1b9 0901 	subs.w	r9, r9, #1
 8000786:	d505      	bpl.n	8000794 <_fwalk_reent+0x24>
 8000788:	6824      	ldr	r4, [r4, #0]
 800078a:	2c00      	cmp	r4, #0
 800078c:	d1f7      	bne.n	800077e <_fwalk_reent+0xe>
 800078e:	4638      	mov	r0, r7
 8000790:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000794:	89ab      	ldrh	r3, [r5, #12]
 8000796:	2b01      	cmp	r3, #1
 8000798:	d907      	bls.n	80007aa <_fwalk_reent+0x3a>
 800079a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800079e:	3301      	adds	r3, #1
 80007a0:	d003      	beq.n	80007aa <_fwalk_reent+0x3a>
 80007a2:	4629      	mov	r1, r5
 80007a4:	4630      	mov	r0, r6
 80007a6:	47c0      	blx	r8
 80007a8:	4307      	orrs	r7, r0
 80007aa:	3568      	adds	r5, #104	; 0x68
 80007ac:	e7e9      	b.n	8000782 <_fwalk_reent+0x12>

080007ae <__retarget_lock_init_recursive>:
 80007ae:	4770      	bx	lr

080007b0 <__retarget_lock_acquire_recursive>:
 80007b0:	4770      	bx	lr

080007b2 <__retarget_lock_release_recursive>:
 80007b2:	4770      	bx	lr

080007b4 <sbrk_aligned>:
 80007b4:	b570      	push	{r4, r5, r6, lr}
 80007b6:	4e0e      	ldr	r6, [pc, #56]	; (80007f0 <sbrk_aligned+0x3c>)
 80007b8:	460c      	mov	r4, r1
 80007ba:	6831      	ldr	r1, [r6, #0]
 80007bc:	4605      	mov	r5, r0
 80007be:	b911      	cbnz	r1, 80007c6 <sbrk_aligned+0x12>
 80007c0:	f000 fb7a 	bl	8000eb8 <_sbrk_r>
 80007c4:	6030      	str	r0, [r6, #0]
 80007c6:	4621      	mov	r1, r4
 80007c8:	4628      	mov	r0, r5
 80007ca:	f000 fb75 	bl	8000eb8 <_sbrk_r>
 80007ce:	1c43      	adds	r3, r0, #1
 80007d0:	d00a      	beq.n	80007e8 <sbrk_aligned+0x34>
 80007d2:	1cc4      	adds	r4, r0, #3
 80007d4:	f024 0403 	bic.w	r4, r4, #3
 80007d8:	42a0      	cmp	r0, r4
 80007da:	d007      	beq.n	80007ec <sbrk_aligned+0x38>
 80007dc:	1a21      	subs	r1, r4, r0
 80007de:	4628      	mov	r0, r5
 80007e0:	f000 fb6a 	bl	8000eb8 <_sbrk_r>
 80007e4:	3001      	adds	r0, #1
 80007e6:	d101      	bne.n	80007ec <sbrk_aligned+0x38>
 80007e8:	f04f 34ff 	mov.w	r4, #4294967295
 80007ec:	4620      	mov	r0, r4
 80007ee:	bd70      	pop	{r4, r5, r6, pc}
 80007f0:	2000008c 	.word	0x2000008c

080007f4 <_malloc_r>:
 80007f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007f8:	1ccd      	adds	r5, r1, #3
 80007fa:	f025 0503 	bic.w	r5, r5, #3
 80007fe:	3508      	adds	r5, #8
 8000800:	2d0c      	cmp	r5, #12
 8000802:	bf38      	it	cc
 8000804:	250c      	movcc	r5, #12
 8000806:	2d00      	cmp	r5, #0
 8000808:	4607      	mov	r7, r0
 800080a:	db01      	blt.n	8000810 <_malloc_r+0x1c>
 800080c:	42a9      	cmp	r1, r5
 800080e:	d905      	bls.n	800081c <_malloc_r+0x28>
 8000810:	230c      	movs	r3, #12
 8000812:	603b      	str	r3, [r7, #0]
 8000814:	2600      	movs	r6, #0
 8000816:	4630      	mov	r0, r6
 8000818:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800081c:	4e2e      	ldr	r6, [pc, #184]	; (80008d8 <_malloc_r+0xe4>)
 800081e:	f000 fdbb 	bl	8001398 <__malloc_lock>
 8000822:	6833      	ldr	r3, [r6, #0]
 8000824:	461c      	mov	r4, r3
 8000826:	bb34      	cbnz	r4, 8000876 <_malloc_r+0x82>
 8000828:	4629      	mov	r1, r5
 800082a:	4638      	mov	r0, r7
 800082c:	f7ff ffc2 	bl	80007b4 <sbrk_aligned>
 8000830:	1c43      	adds	r3, r0, #1
 8000832:	4604      	mov	r4, r0
 8000834:	d14d      	bne.n	80008d2 <_malloc_r+0xde>
 8000836:	6834      	ldr	r4, [r6, #0]
 8000838:	4626      	mov	r6, r4
 800083a:	2e00      	cmp	r6, #0
 800083c:	d140      	bne.n	80008c0 <_malloc_r+0xcc>
 800083e:	6823      	ldr	r3, [r4, #0]
 8000840:	4631      	mov	r1, r6
 8000842:	4638      	mov	r0, r7
 8000844:	eb04 0803 	add.w	r8, r4, r3
 8000848:	f000 fb36 	bl	8000eb8 <_sbrk_r>
 800084c:	4580      	cmp	r8, r0
 800084e:	d13a      	bne.n	80008c6 <_malloc_r+0xd2>
 8000850:	6821      	ldr	r1, [r4, #0]
 8000852:	3503      	adds	r5, #3
 8000854:	1a6d      	subs	r5, r5, r1
 8000856:	f025 0503 	bic.w	r5, r5, #3
 800085a:	3508      	adds	r5, #8
 800085c:	2d0c      	cmp	r5, #12
 800085e:	bf38      	it	cc
 8000860:	250c      	movcc	r5, #12
 8000862:	4629      	mov	r1, r5
 8000864:	4638      	mov	r0, r7
 8000866:	f7ff ffa5 	bl	80007b4 <sbrk_aligned>
 800086a:	3001      	adds	r0, #1
 800086c:	d02b      	beq.n	80008c6 <_malloc_r+0xd2>
 800086e:	6823      	ldr	r3, [r4, #0]
 8000870:	442b      	add	r3, r5
 8000872:	6023      	str	r3, [r4, #0]
 8000874:	e00e      	b.n	8000894 <_malloc_r+0xa0>
 8000876:	6822      	ldr	r2, [r4, #0]
 8000878:	1b52      	subs	r2, r2, r5
 800087a:	d41e      	bmi.n	80008ba <_malloc_r+0xc6>
 800087c:	2a0b      	cmp	r2, #11
 800087e:	d916      	bls.n	80008ae <_malloc_r+0xba>
 8000880:	1961      	adds	r1, r4, r5
 8000882:	42a3      	cmp	r3, r4
 8000884:	6025      	str	r5, [r4, #0]
 8000886:	bf18      	it	ne
 8000888:	6059      	strne	r1, [r3, #4]
 800088a:	6863      	ldr	r3, [r4, #4]
 800088c:	bf08      	it	eq
 800088e:	6031      	streq	r1, [r6, #0]
 8000890:	5162      	str	r2, [r4, r5]
 8000892:	604b      	str	r3, [r1, #4]
 8000894:	4638      	mov	r0, r7
 8000896:	f104 060b 	add.w	r6, r4, #11
 800089a:	f000 fd83 	bl	80013a4 <__malloc_unlock>
 800089e:	f026 0607 	bic.w	r6, r6, #7
 80008a2:	1d23      	adds	r3, r4, #4
 80008a4:	1af2      	subs	r2, r6, r3
 80008a6:	d0b6      	beq.n	8000816 <_malloc_r+0x22>
 80008a8:	1b9b      	subs	r3, r3, r6
 80008aa:	50a3      	str	r3, [r4, r2]
 80008ac:	e7b3      	b.n	8000816 <_malloc_r+0x22>
 80008ae:	6862      	ldr	r2, [r4, #4]
 80008b0:	42a3      	cmp	r3, r4
 80008b2:	bf0c      	ite	eq
 80008b4:	6032      	streq	r2, [r6, #0]
 80008b6:	605a      	strne	r2, [r3, #4]
 80008b8:	e7ec      	b.n	8000894 <_malloc_r+0xa0>
 80008ba:	4623      	mov	r3, r4
 80008bc:	6864      	ldr	r4, [r4, #4]
 80008be:	e7b2      	b.n	8000826 <_malloc_r+0x32>
 80008c0:	4634      	mov	r4, r6
 80008c2:	6876      	ldr	r6, [r6, #4]
 80008c4:	e7b9      	b.n	800083a <_malloc_r+0x46>
 80008c6:	230c      	movs	r3, #12
 80008c8:	603b      	str	r3, [r7, #0]
 80008ca:	4638      	mov	r0, r7
 80008cc:	f000 fd6a 	bl	80013a4 <__malloc_unlock>
 80008d0:	e7a1      	b.n	8000816 <_malloc_r+0x22>
 80008d2:	6025      	str	r5, [r4, #0]
 80008d4:	e7de      	b.n	8000894 <_malloc_r+0xa0>
 80008d6:	bf00      	nop
 80008d8:	20000088 	.word	0x20000088

080008dc <__sfputc_r>:
 80008dc:	6893      	ldr	r3, [r2, #8]
 80008de:	3b01      	subs	r3, #1
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	b410      	push	{r4}
 80008e4:	6093      	str	r3, [r2, #8]
 80008e6:	da08      	bge.n	80008fa <__sfputc_r+0x1e>
 80008e8:	6994      	ldr	r4, [r2, #24]
 80008ea:	42a3      	cmp	r3, r4
 80008ec:	db01      	blt.n	80008f2 <__sfputc_r+0x16>
 80008ee:	290a      	cmp	r1, #10
 80008f0:	d103      	bne.n	80008fa <__sfputc_r+0x1e>
 80008f2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80008f6:	f000 bb33 	b.w	8000f60 <__swbuf_r>
 80008fa:	6813      	ldr	r3, [r2, #0]
 80008fc:	1c58      	adds	r0, r3, #1
 80008fe:	6010      	str	r0, [r2, #0]
 8000900:	7019      	strb	r1, [r3, #0]
 8000902:	4608      	mov	r0, r1
 8000904:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000908:	4770      	bx	lr

0800090a <__sfputs_r>:
 800090a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800090c:	4606      	mov	r6, r0
 800090e:	460f      	mov	r7, r1
 8000910:	4614      	mov	r4, r2
 8000912:	18d5      	adds	r5, r2, r3
 8000914:	42ac      	cmp	r4, r5
 8000916:	d101      	bne.n	800091c <__sfputs_r+0x12>
 8000918:	2000      	movs	r0, #0
 800091a:	e007      	b.n	800092c <__sfputs_r+0x22>
 800091c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000920:	463a      	mov	r2, r7
 8000922:	4630      	mov	r0, r6
 8000924:	f7ff ffda 	bl	80008dc <__sfputc_r>
 8000928:	1c43      	adds	r3, r0, #1
 800092a:	d1f3      	bne.n	8000914 <__sfputs_r+0xa>
 800092c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000930 <_vfiprintf_r>:
 8000930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000934:	460d      	mov	r5, r1
 8000936:	b09d      	sub	sp, #116	; 0x74
 8000938:	4614      	mov	r4, r2
 800093a:	4698      	mov	r8, r3
 800093c:	4606      	mov	r6, r0
 800093e:	b118      	cbz	r0, 8000948 <_vfiprintf_r+0x18>
 8000940:	6983      	ldr	r3, [r0, #24]
 8000942:	b90b      	cbnz	r3, 8000948 <_vfiprintf_r+0x18>
 8000944:	f7ff fe96 	bl	8000674 <__sinit>
 8000948:	4b89      	ldr	r3, [pc, #548]	; (8000b70 <_vfiprintf_r+0x240>)
 800094a:	429d      	cmp	r5, r3
 800094c:	d11b      	bne.n	8000986 <_vfiprintf_r+0x56>
 800094e:	6875      	ldr	r5, [r6, #4]
 8000950:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000952:	07d9      	lsls	r1, r3, #31
 8000954:	d405      	bmi.n	8000962 <_vfiprintf_r+0x32>
 8000956:	89ab      	ldrh	r3, [r5, #12]
 8000958:	059a      	lsls	r2, r3, #22
 800095a:	d402      	bmi.n	8000962 <_vfiprintf_r+0x32>
 800095c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800095e:	f7ff ff27 	bl	80007b0 <__retarget_lock_acquire_recursive>
 8000962:	89ab      	ldrh	r3, [r5, #12]
 8000964:	071b      	lsls	r3, r3, #28
 8000966:	d501      	bpl.n	800096c <_vfiprintf_r+0x3c>
 8000968:	692b      	ldr	r3, [r5, #16]
 800096a:	b9eb      	cbnz	r3, 80009a8 <_vfiprintf_r+0x78>
 800096c:	4629      	mov	r1, r5
 800096e:	4630      	mov	r0, r6
 8000970:	f000 fb5a 	bl	8001028 <__swsetup_r>
 8000974:	b1c0      	cbz	r0, 80009a8 <_vfiprintf_r+0x78>
 8000976:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000978:	07dc      	lsls	r4, r3, #31
 800097a:	d50e      	bpl.n	800099a <_vfiprintf_r+0x6a>
 800097c:	f04f 30ff 	mov.w	r0, #4294967295
 8000980:	b01d      	add	sp, #116	; 0x74
 8000982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000986:	4b7b      	ldr	r3, [pc, #492]	; (8000b74 <_vfiprintf_r+0x244>)
 8000988:	429d      	cmp	r5, r3
 800098a:	d101      	bne.n	8000990 <_vfiprintf_r+0x60>
 800098c:	68b5      	ldr	r5, [r6, #8]
 800098e:	e7df      	b.n	8000950 <_vfiprintf_r+0x20>
 8000990:	4b79      	ldr	r3, [pc, #484]	; (8000b78 <_vfiprintf_r+0x248>)
 8000992:	429d      	cmp	r5, r3
 8000994:	bf08      	it	eq
 8000996:	68f5      	ldreq	r5, [r6, #12]
 8000998:	e7da      	b.n	8000950 <_vfiprintf_r+0x20>
 800099a:	89ab      	ldrh	r3, [r5, #12]
 800099c:	0598      	lsls	r0, r3, #22
 800099e:	d4ed      	bmi.n	800097c <_vfiprintf_r+0x4c>
 80009a0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009a2:	f7ff ff06 	bl	80007b2 <__retarget_lock_release_recursive>
 80009a6:	e7e9      	b.n	800097c <_vfiprintf_r+0x4c>
 80009a8:	2300      	movs	r3, #0
 80009aa:	9309      	str	r3, [sp, #36]	; 0x24
 80009ac:	2320      	movs	r3, #32
 80009ae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009b2:	f8cd 800c 	str.w	r8, [sp, #12]
 80009b6:	2330      	movs	r3, #48	; 0x30
 80009b8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000b7c <_vfiprintf_r+0x24c>
 80009bc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009c0:	f04f 0901 	mov.w	r9, #1
 80009c4:	4623      	mov	r3, r4
 80009c6:	469a      	mov	sl, r3
 80009c8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80009cc:	b10a      	cbz	r2, 80009d2 <_vfiprintf_r+0xa2>
 80009ce:	2a25      	cmp	r2, #37	; 0x25
 80009d0:	d1f9      	bne.n	80009c6 <_vfiprintf_r+0x96>
 80009d2:	ebba 0b04 	subs.w	fp, sl, r4
 80009d6:	d00b      	beq.n	80009f0 <_vfiprintf_r+0xc0>
 80009d8:	465b      	mov	r3, fp
 80009da:	4622      	mov	r2, r4
 80009dc:	4629      	mov	r1, r5
 80009de:	4630      	mov	r0, r6
 80009e0:	f7ff ff93 	bl	800090a <__sfputs_r>
 80009e4:	3001      	adds	r0, #1
 80009e6:	f000 80aa 	beq.w	8000b3e <_vfiprintf_r+0x20e>
 80009ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80009ec:	445a      	add	r2, fp
 80009ee:	9209      	str	r2, [sp, #36]	; 0x24
 80009f0:	f89a 3000 	ldrb.w	r3, [sl]
 80009f4:	2b00      	cmp	r3, #0
 80009f6:	f000 80a2 	beq.w	8000b3e <_vfiprintf_r+0x20e>
 80009fa:	2300      	movs	r3, #0
 80009fc:	f04f 32ff 	mov.w	r2, #4294967295
 8000a00:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a04:	f10a 0a01 	add.w	sl, sl, #1
 8000a08:	9304      	str	r3, [sp, #16]
 8000a0a:	9307      	str	r3, [sp, #28]
 8000a0c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a10:	931a      	str	r3, [sp, #104]	; 0x68
 8000a12:	4654      	mov	r4, sl
 8000a14:	2205      	movs	r2, #5
 8000a16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a1a:	4858      	ldr	r0, [pc, #352]	; (8000b7c <_vfiprintf_r+0x24c>)
 8000a1c:	f7ff fbe0 	bl	80001e0 <memchr>
 8000a20:	9a04      	ldr	r2, [sp, #16]
 8000a22:	b9d8      	cbnz	r0, 8000a5c <_vfiprintf_r+0x12c>
 8000a24:	06d1      	lsls	r1, r2, #27
 8000a26:	bf44      	itt	mi
 8000a28:	2320      	movmi	r3, #32
 8000a2a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a2e:	0713      	lsls	r3, r2, #28
 8000a30:	bf44      	itt	mi
 8000a32:	232b      	movmi	r3, #43	; 0x2b
 8000a34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000a38:	f89a 3000 	ldrb.w	r3, [sl]
 8000a3c:	2b2a      	cmp	r3, #42	; 0x2a
 8000a3e:	d015      	beq.n	8000a6c <_vfiprintf_r+0x13c>
 8000a40:	9a07      	ldr	r2, [sp, #28]
 8000a42:	4654      	mov	r4, sl
 8000a44:	2000      	movs	r0, #0
 8000a46:	f04f 0c0a 	mov.w	ip, #10
 8000a4a:	4621      	mov	r1, r4
 8000a4c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a50:	3b30      	subs	r3, #48	; 0x30
 8000a52:	2b09      	cmp	r3, #9
 8000a54:	d94e      	bls.n	8000af4 <_vfiprintf_r+0x1c4>
 8000a56:	b1b0      	cbz	r0, 8000a86 <_vfiprintf_r+0x156>
 8000a58:	9207      	str	r2, [sp, #28]
 8000a5a:	e014      	b.n	8000a86 <_vfiprintf_r+0x156>
 8000a5c:	eba0 0308 	sub.w	r3, r0, r8
 8000a60:	fa09 f303 	lsl.w	r3, r9, r3
 8000a64:	4313      	orrs	r3, r2
 8000a66:	9304      	str	r3, [sp, #16]
 8000a68:	46a2      	mov	sl, r4
 8000a6a:	e7d2      	b.n	8000a12 <_vfiprintf_r+0xe2>
 8000a6c:	9b03      	ldr	r3, [sp, #12]
 8000a6e:	1d19      	adds	r1, r3, #4
 8000a70:	681b      	ldr	r3, [r3, #0]
 8000a72:	9103      	str	r1, [sp, #12]
 8000a74:	2b00      	cmp	r3, #0
 8000a76:	bfbb      	ittet	lt
 8000a78:	425b      	neglt	r3, r3
 8000a7a:	f042 0202 	orrlt.w	r2, r2, #2
 8000a7e:	9307      	strge	r3, [sp, #28]
 8000a80:	9307      	strlt	r3, [sp, #28]
 8000a82:	bfb8      	it	lt
 8000a84:	9204      	strlt	r2, [sp, #16]
 8000a86:	7823      	ldrb	r3, [r4, #0]
 8000a88:	2b2e      	cmp	r3, #46	; 0x2e
 8000a8a:	d10c      	bne.n	8000aa6 <_vfiprintf_r+0x176>
 8000a8c:	7863      	ldrb	r3, [r4, #1]
 8000a8e:	2b2a      	cmp	r3, #42	; 0x2a
 8000a90:	d135      	bne.n	8000afe <_vfiprintf_r+0x1ce>
 8000a92:	9b03      	ldr	r3, [sp, #12]
 8000a94:	1d1a      	adds	r2, r3, #4
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	9203      	str	r2, [sp, #12]
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	bfb8      	it	lt
 8000a9e:	f04f 33ff 	movlt.w	r3, #4294967295
 8000aa2:	3402      	adds	r4, #2
 8000aa4:	9305      	str	r3, [sp, #20]
 8000aa6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000b8c <_vfiprintf_r+0x25c>
 8000aaa:	7821      	ldrb	r1, [r4, #0]
 8000aac:	2203      	movs	r2, #3
 8000aae:	4650      	mov	r0, sl
 8000ab0:	f7ff fb96 	bl	80001e0 <memchr>
 8000ab4:	b140      	cbz	r0, 8000ac8 <_vfiprintf_r+0x198>
 8000ab6:	2340      	movs	r3, #64	; 0x40
 8000ab8:	eba0 000a 	sub.w	r0, r0, sl
 8000abc:	fa03 f000 	lsl.w	r0, r3, r0
 8000ac0:	9b04      	ldr	r3, [sp, #16]
 8000ac2:	4303      	orrs	r3, r0
 8000ac4:	3401      	adds	r4, #1
 8000ac6:	9304      	str	r3, [sp, #16]
 8000ac8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000acc:	482c      	ldr	r0, [pc, #176]	; (8000b80 <_vfiprintf_r+0x250>)
 8000ace:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ad2:	2206      	movs	r2, #6
 8000ad4:	f7ff fb84 	bl	80001e0 <memchr>
 8000ad8:	2800      	cmp	r0, #0
 8000ada:	d03f      	beq.n	8000b5c <_vfiprintf_r+0x22c>
 8000adc:	4b29      	ldr	r3, [pc, #164]	; (8000b84 <_vfiprintf_r+0x254>)
 8000ade:	bb1b      	cbnz	r3, 8000b28 <_vfiprintf_r+0x1f8>
 8000ae0:	9b03      	ldr	r3, [sp, #12]
 8000ae2:	3307      	adds	r3, #7
 8000ae4:	f023 0307 	bic.w	r3, r3, #7
 8000ae8:	3308      	adds	r3, #8
 8000aea:	9303      	str	r3, [sp, #12]
 8000aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000aee:	443b      	add	r3, r7
 8000af0:	9309      	str	r3, [sp, #36]	; 0x24
 8000af2:	e767      	b.n	80009c4 <_vfiprintf_r+0x94>
 8000af4:	fb0c 3202 	mla	r2, ip, r2, r3
 8000af8:	460c      	mov	r4, r1
 8000afa:	2001      	movs	r0, #1
 8000afc:	e7a5      	b.n	8000a4a <_vfiprintf_r+0x11a>
 8000afe:	2300      	movs	r3, #0
 8000b00:	3401      	adds	r4, #1
 8000b02:	9305      	str	r3, [sp, #20]
 8000b04:	4619      	mov	r1, r3
 8000b06:	f04f 0c0a 	mov.w	ip, #10
 8000b0a:	4620      	mov	r0, r4
 8000b0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b10:	3a30      	subs	r2, #48	; 0x30
 8000b12:	2a09      	cmp	r2, #9
 8000b14:	d903      	bls.n	8000b1e <_vfiprintf_r+0x1ee>
 8000b16:	2b00      	cmp	r3, #0
 8000b18:	d0c5      	beq.n	8000aa6 <_vfiprintf_r+0x176>
 8000b1a:	9105      	str	r1, [sp, #20]
 8000b1c:	e7c3      	b.n	8000aa6 <_vfiprintf_r+0x176>
 8000b1e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000b22:	4604      	mov	r4, r0
 8000b24:	2301      	movs	r3, #1
 8000b26:	e7f0      	b.n	8000b0a <_vfiprintf_r+0x1da>
 8000b28:	ab03      	add	r3, sp, #12
 8000b2a:	9300      	str	r3, [sp, #0]
 8000b2c:	462a      	mov	r2, r5
 8000b2e:	4b16      	ldr	r3, [pc, #88]	; (8000b88 <_vfiprintf_r+0x258>)
 8000b30:	a904      	add	r1, sp, #16
 8000b32:	4630      	mov	r0, r6
 8000b34:	f3af 8000 	nop.w
 8000b38:	4607      	mov	r7, r0
 8000b3a:	1c78      	adds	r0, r7, #1
 8000b3c:	d1d6      	bne.n	8000aec <_vfiprintf_r+0x1bc>
 8000b3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000b40:	07d9      	lsls	r1, r3, #31
 8000b42:	d405      	bmi.n	8000b50 <_vfiprintf_r+0x220>
 8000b44:	89ab      	ldrh	r3, [r5, #12]
 8000b46:	059a      	lsls	r2, r3, #22
 8000b48:	d402      	bmi.n	8000b50 <_vfiprintf_r+0x220>
 8000b4a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000b4c:	f7ff fe31 	bl	80007b2 <__retarget_lock_release_recursive>
 8000b50:	89ab      	ldrh	r3, [r5, #12]
 8000b52:	065b      	lsls	r3, r3, #25
 8000b54:	f53f af12 	bmi.w	800097c <_vfiprintf_r+0x4c>
 8000b58:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b5a:	e711      	b.n	8000980 <_vfiprintf_r+0x50>
 8000b5c:	ab03      	add	r3, sp, #12
 8000b5e:	9300      	str	r3, [sp, #0]
 8000b60:	462a      	mov	r2, r5
 8000b62:	4b09      	ldr	r3, [pc, #36]	; (8000b88 <_vfiprintf_r+0x258>)
 8000b64:	a904      	add	r1, sp, #16
 8000b66:	4630      	mov	r0, r6
 8000b68:	f000 f880 	bl	8000c6c <_printf_i>
 8000b6c:	e7e4      	b.n	8000b38 <_vfiprintf_r+0x208>
 8000b6e:	bf00      	nop
 8000b70:	08001508 	.word	0x08001508
 8000b74:	08001528 	.word	0x08001528
 8000b78:	080014e8 	.word	0x080014e8
 8000b7c:	08001548 	.word	0x08001548
 8000b80:	08001552 	.word	0x08001552
 8000b84:	00000000 	.word	0x00000000
 8000b88:	0800090b 	.word	0x0800090b
 8000b8c:	0800154e 	.word	0x0800154e

08000b90 <_printf_common>:
 8000b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b94:	4616      	mov	r6, r2
 8000b96:	4699      	mov	r9, r3
 8000b98:	688a      	ldr	r2, [r1, #8]
 8000b9a:	690b      	ldr	r3, [r1, #16]
 8000b9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ba0:	4293      	cmp	r3, r2
 8000ba2:	bfb8      	it	lt
 8000ba4:	4613      	movlt	r3, r2
 8000ba6:	6033      	str	r3, [r6, #0]
 8000ba8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bac:	4607      	mov	r7, r0
 8000bae:	460c      	mov	r4, r1
 8000bb0:	b10a      	cbz	r2, 8000bb6 <_printf_common+0x26>
 8000bb2:	3301      	adds	r3, #1
 8000bb4:	6033      	str	r3, [r6, #0]
 8000bb6:	6823      	ldr	r3, [r4, #0]
 8000bb8:	0699      	lsls	r1, r3, #26
 8000bba:	bf42      	ittt	mi
 8000bbc:	6833      	ldrmi	r3, [r6, #0]
 8000bbe:	3302      	addmi	r3, #2
 8000bc0:	6033      	strmi	r3, [r6, #0]
 8000bc2:	6825      	ldr	r5, [r4, #0]
 8000bc4:	f015 0506 	ands.w	r5, r5, #6
 8000bc8:	d106      	bne.n	8000bd8 <_printf_common+0x48>
 8000bca:	f104 0a19 	add.w	sl, r4, #25
 8000bce:	68e3      	ldr	r3, [r4, #12]
 8000bd0:	6832      	ldr	r2, [r6, #0]
 8000bd2:	1a9b      	subs	r3, r3, r2
 8000bd4:	42ab      	cmp	r3, r5
 8000bd6:	dc26      	bgt.n	8000c26 <_printf_common+0x96>
 8000bd8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000bdc:	1e13      	subs	r3, r2, #0
 8000bde:	6822      	ldr	r2, [r4, #0]
 8000be0:	bf18      	it	ne
 8000be2:	2301      	movne	r3, #1
 8000be4:	0692      	lsls	r2, r2, #26
 8000be6:	d42b      	bmi.n	8000c40 <_printf_common+0xb0>
 8000be8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000bec:	4649      	mov	r1, r9
 8000bee:	4638      	mov	r0, r7
 8000bf0:	47c0      	blx	r8
 8000bf2:	3001      	adds	r0, #1
 8000bf4:	d01e      	beq.n	8000c34 <_printf_common+0xa4>
 8000bf6:	6823      	ldr	r3, [r4, #0]
 8000bf8:	68e5      	ldr	r5, [r4, #12]
 8000bfa:	6832      	ldr	r2, [r6, #0]
 8000bfc:	f003 0306 	and.w	r3, r3, #6
 8000c00:	2b04      	cmp	r3, #4
 8000c02:	bf08      	it	eq
 8000c04:	1aad      	subeq	r5, r5, r2
 8000c06:	68a3      	ldr	r3, [r4, #8]
 8000c08:	6922      	ldr	r2, [r4, #16]
 8000c0a:	bf0c      	ite	eq
 8000c0c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c10:	2500      	movne	r5, #0
 8000c12:	4293      	cmp	r3, r2
 8000c14:	bfc4      	itt	gt
 8000c16:	1a9b      	subgt	r3, r3, r2
 8000c18:	18ed      	addgt	r5, r5, r3
 8000c1a:	2600      	movs	r6, #0
 8000c1c:	341a      	adds	r4, #26
 8000c1e:	42b5      	cmp	r5, r6
 8000c20:	d11a      	bne.n	8000c58 <_printf_common+0xc8>
 8000c22:	2000      	movs	r0, #0
 8000c24:	e008      	b.n	8000c38 <_printf_common+0xa8>
 8000c26:	2301      	movs	r3, #1
 8000c28:	4652      	mov	r2, sl
 8000c2a:	4649      	mov	r1, r9
 8000c2c:	4638      	mov	r0, r7
 8000c2e:	47c0      	blx	r8
 8000c30:	3001      	adds	r0, #1
 8000c32:	d103      	bne.n	8000c3c <_printf_common+0xac>
 8000c34:	f04f 30ff 	mov.w	r0, #4294967295
 8000c38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c3c:	3501      	adds	r5, #1
 8000c3e:	e7c6      	b.n	8000bce <_printf_common+0x3e>
 8000c40:	18e1      	adds	r1, r4, r3
 8000c42:	1c5a      	adds	r2, r3, #1
 8000c44:	2030      	movs	r0, #48	; 0x30
 8000c46:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c4a:	4422      	add	r2, r4
 8000c4c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000c50:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000c54:	3302      	adds	r3, #2
 8000c56:	e7c7      	b.n	8000be8 <_printf_common+0x58>
 8000c58:	2301      	movs	r3, #1
 8000c5a:	4622      	mov	r2, r4
 8000c5c:	4649      	mov	r1, r9
 8000c5e:	4638      	mov	r0, r7
 8000c60:	47c0      	blx	r8
 8000c62:	3001      	adds	r0, #1
 8000c64:	d0e6      	beq.n	8000c34 <_printf_common+0xa4>
 8000c66:	3601      	adds	r6, #1
 8000c68:	e7d9      	b.n	8000c1e <_printf_common+0x8e>
	...

08000c6c <_printf_i>:
 8000c6c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000c70:	7e0f      	ldrb	r7, [r1, #24]
 8000c72:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000c74:	2f78      	cmp	r7, #120	; 0x78
 8000c76:	4691      	mov	r9, r2
 8000c78:	4680      	mov	r8, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	469a      	mov	sl, r3
 8000c7e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000c82:	d807      	bhi.n	8000c94 <_printf_i+0x28>
 8000c84:	2f62      	cmp	r7, #98	; 0x62
 8000c86:	d80a      	bhi.n	8000c9e <_printf_i+0x32>
 8000c88:	2f00      	cmp	r7, #0
 8000c8a:	f000 80d8 	beq.w	8000e3e <_printf_i+0x1d2>
 8000c8e:	2f58      	cmp	r7, #88	; 0x58
 8000c90:	f000 80a3 	beq.w	8000dda <_printf_i+0x16e>
 8000c94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000c98:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000c9c:	e03a      	b.n	8000d14 <_printf_i+0xa8>
 8000c9e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000ca2:	2b15      	cmp	r3, #21
 8000ca4:	d8f6      	bhi.n	8000c94 <_printf_i+0x28>
 8000ca6:	a101      	add	r1, pc, #4	; (adr r1, 8000cac <_printf_i+0x40>)
 8000ca8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000cac:	08000d05 	.word	0x08000d05
 8000cb0:	08000d19 	.word	0x08000d19
 8000cb4:	08000c95 	.word	0x08000c95
 8000cb8:	08000c95 	.word	0x08000c95
 8000cbc:	08000c95 	.word	0x08000c95
 8000cc0:	08000c95 	.word	0x08000c95
 8000cc4:	08000d19 	.word	0x08000d19
 8000cc8:	08000c95 	.word	0x08000c95
 8000ccc:	08000c95 	.word	0x08000c95
 8000cd0:	08000c95 	.word	0x08000c95
 8000cd4:	08000c95 	.word	0x08000c95
 8000cd8:	08000e25 	.word	0x08000e25
 8000cdc:	08000d49 	.word	0x08000d49
 8000ce0:	08000e07 	.word	0x08000e07
 8000ce4:	08000c95 	.word	0x08000c95
 8000ce8:	08000c95 	.word	0x08000c95
 8000cec:	08000e47 	.word	0x08000e47
 8000cf0:	08000c95 	.word	0x08000c95
 8000cf4:	08000d49 	.word	0x08000d49
 8000cf8:	08000c95 	.word	0x08000c95
 8000cfc:	08000c95 	.word	0x08000c95
 8000d00:	08000e0f 	.word	0x08000e0f
 8000d04:	682b      	ldr	r3, [r5, #0]
 8000d06:	1d1a      	adds	r2, r3, #4
 8000d08:	681b      	ldr	r3, [r3, #0]
 8000d0a:	602a      	str	r2, [r5, #0]
 8000d0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d10:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d14:	2301      	movs	r3, #1
 8000d16:	e0a3      	b.n	8000e60 <_printf_i+0x1f4>
 8000d18:	6820      	ldr	r0, [r4, #0]
 8000d1a:	6829      	ldr	r1, [r5, #0]
 8000d1c:	0606      	lsls	r6, r0, #24
 8000d1e:	f101 0304 	add.w	r3, r1, #4
 8000d22:	d50a      	bpl.n	8000d3a <_printf_i+0xce>
 8000d24:	680e      	ldr	r6, [r1, #0]
 8000d26:	602b      	str	r3, [r5, #0]
 8000d28:	2e00      	cmp	r6, #0
 8000d2a:	da03      	bge.n	8000d34 <_printf_i+0xc8>
 8000d2c:	232d      	movs	r3, #45	; 0x2d
 8000d2e:	4276      	negs	r6, r6
 8000d30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000d34:	485e      	ldr	r0, [pc, #376]	; (8000eb0 <_printf_i+0x244>)
 8000d36:	230a      	movs	r3, #10
 8000d38:	e019      	b.n	8000d6e <_printf_i+0x102>
 8000d3a:	680e      	ldr	r6, [r1, #0]
 8000d3c:	602b      	str	r3, [r5, #0]
 8000d3e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d42:	bf18      	it	ne
 8000d44:	b236      	sxthne	r6, r6
 8000d46:	e7ef      	b.n	8000d28 <_printf_i+0xbc>
 8000d48:	682b      	ldr	r3, [r5, #0]
 8000d4a:	6820      	ldr	r0, [r4, #0]
 8000d4c:	1d19      	adds	r1, r3, #4
 8000d4e:	6029      	str	r1, [r5, #0]
 8000d50:	0601      	lsls	r1, r0, #24
 8000d52:	d501      	bpl.n	8000d58 <_printf_i+0xec>
 8000d54:	681e      	ldr	r6, [r3, #0]
 8000d56:	e002      	b.n	8000d5e <_printf_i+0xf2>
 8000d58:	0646      	lsls	r6, r0, #25
 8000d5a:	d5fb      	bpl.n	8000d54 <_printf_i+0xe8>
 8000d5c:	881e      	ldrh	r6, [r3, #0]
 8000d5e:	4854      	ldr	r0, [pc, #336]	; (8000eb0 <_printf_i+0x244>)
 8000d60:	2f6f      	cmp	r7, #111	; 0x6f
 8000d62:	bf0c      	ite	eq
 8000d64:	2308      	moveq	r3, #8
 8000d66:	230a      	movne	r3, #10
 8000d68:	2100      	movs	r1, #0
 8000d6a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d6e:	6865      	ldr	r5, [r4, #4]
 8000d70:	60a5      	str	r5, [r4, #8]
 8000d72:	2d00      	cmp	r5, #0
 8000d74:	bfa2      	ittt	ge
 8000d76:	6821      	ldrge	r1, [r4, #0]
 8000d78:	f021 0104 	bicge.w	r1, r1, #4
 8000d7c:	6021      	strge	r1, [r4, #0]
 8000d7e:	b90e      	cbnz	r6, 8000d84 <_printf_i+0x118>
 8000d80:	2d00      	cmp	r5, #0
 8000d82:	d04d      	beq.n	8000e20 <_printf_i+0x1b4>
 8000d84:	4615      	mov	r5, r2
 8000d86:	fbb6 f1f3 	udiv	r1, r6, r3
 8000d8a:	fb03 6711 	mls	r7, r3, r1, r6
 8000d8e:	5dc7      	ldrb	r7, [r0, r7]
 8000d90:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000d94:	4637      	mov	r7, r6
 8000d96:	42bb      	cmp	r3, r7
 8000d98:	460e      	mov	r6, r1
 8000d9a:	d9f4      	bls.n	8000d86 <_printf_i+0x11a>
 8000d9c:	2b08      	cmp	r3, #8
 8000d9e:	d10b      	bne.n	8000db8 <_printf_i+0x14c>
 8000da0:	6823      	ldr	r3, [r4, #0]
 8000da2:	07de      	lsls	r6, r3, #31
 8000da4:	d508      	bpl.n	8000db8 <_printf_i+0x14c>
 8000da6:	6923      	ldr	r3, [r4, #16]
 8000da8:	6861      	ldr	r1, [r4, #4]
 8000daa:	4299      	cmp	r1, r3
 8000dac:	bfde      	ittt	le
 8000dae:	2330      	movle	r3, #48	; 0x30
 8000db0:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000db4:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000db8:	1b52      	subs	r2, r2, r5
 8000dba:	6122      	str	r2, [r4, #16]
 8000dbc:	f8cd a000 	str.w	sl, [sp]
 8000dc0:	464b      	mov	r3, r9
 8000dc2:	aa03      	add	r2, sp, #12
 8000dc4:	4621      	mov	r1, r4
 8000dc6:	4640      	mov	r0, r8
 8000dc8:	f7ff fee2 	bl	8000b90 <_printf_common>
 8000dcc:	3001      	adds	r0, #1
 8000dce:	d14c      	bne.n	8000e6a <_printf_i+0x1fe>
 8000dd0:	f04f 30ff 	mov.w	r0, #4294967295
 8000dd4:	b004      	add	sp, #16
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	4835      	ldr	r0, [pc, #212]	; (8000eb0 <_printf_i+0x244>)
 8000ddc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000de0:	6829      	ldr	r1, [r5, #0]
 8000de2:	6823      	ldr	r3, [r4, #0]
 8000de4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000de8:	6029      	str	r1, [r5, #0]
 8000dea:	061d      	lsls	r5, r3, #24
 8000dec:	d514      	bpl.n	8000e18 <_printf_i+0x1ac>
 8000dee:	07df      	lsls	r7, r3, #31
 8000df0:	bf44      	itt	mi
 8000df2:	f043 0320 	orrmi.w	r3, r3, #32
 8000df6:	6023      	strmi	r3, [r4, #0]
 8000df8:	b91e      	cbnz	r6, 8000e02 <_printf_i+0x196>
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	f023 0320 	bic.w	r3, r3, #32
 8000e00:	6023      	str	r3, [r4, #0]
 8000e02:	2310      	movs	r3, #16
 8000e04:	e7b0      	b.n	8000d68 <_printf_i+0xfc>
 8000e06:	6823      	ldr	r3, [r4, #0]
 8000e08:	f043 0320 	orr.w	r3, r3, #32
 8000e0c:	6023      	str	r3, [r4, #0]
 8000e0e:	2378      	movs	r3, #120	; 0x78
 8000e10:	4828      	ldr	r0, [pc, #160]	; (8000eb4 <_printf_i+0x248>)
 8000e12:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000e16:	e7e3      	b.n	8000de0 <_printf_i+0x174>
 8000e18:	0659      	lsls	r1, r3, #25
 8000e1a:	bf48      	it	mi
 8000e1c:	b2b6      	uxthmi	r6, r6
 8000e1e:	e7e6      	b.n	8000dee <_printf_i+0x182>
 8000e20:	4615      	mov	r5, r2
 8000e22:	e7bb      	b.n	8000d9c <_printf_i+0x130>
 8000e24:	682b      	ldr	r3, [r5, #0]
 8000e26:	6826      	ldr	r6, [r4, #0]
 8000e28:	6961      	ldr	r1, [r4, #20]
 8000e2a:	1d18      	adds	r0, r3, #4
 8000e2c:	6028      	str	r0, [r5, #0]
 8000e2e:	0635      	lsls	r5, r6, #24
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	d501      	bpl.n	8000e38 <_printf_i+0x1cc>
 8000e34:	6019      	str	r1, [r3, #0]
 8000e36:	e002      	b.n	8000e3e <_printf_i+0x1d2>
 8000e38:	0670      	lsls	r0, r6, #25
 8000e3a:	d5fb      	bpl.n	8000e34 <_printf_i+0x1c8>
 8000e3c:	8019      	strh	r1, [r3, #0]
 8000e3e:	2300      	movs	r3, #0
 8000e40:	6123      	str	r3, [r4, #16]
 8000e42:	4615      	mov	r5, r2
 8000e44:	e7ba      	b.n	8000dbc <_printf_i+0x150>
 8000e46:	682b      	ldr	r3, [r5, #0]
 8000e48:	1d1a      	adds	r2, r3, #4
 8000e4a:	602a      	str	r2, [r5, #0]
 8000e4c:	681d      	ldr	r5, [r3, #0]
 8000e4e:	6862      	ldr	r2, [r4, #4]
 8000e50:	2100      	movs	r1, #0
 8000e52:	4628      	mov	r0, r5
 8000e54:	f7ff f9c4 	bl	80001e0 <memchr>
 8000e58:	b108      	cbz	r0, 8000e5e <_printf_i+0x1f2>
 8000e5a:	1b40      	subs	r0, r0, r5
 8000e5c:	6060      	str	r0, [r4, #4]
 8000e5e:	6863      	ldr	r3, [r4, #4]
 8000e60:	6123      	str	r3, [r4, #16]
 8000e62:	2300      	movs	r3, #0
 8000e64:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e68:	e7a8      	b.n	8000dbc <_printf_i+0x150>
 8000e6a:	6923      	ldr	r3, [r4, #16]
 8000e6c:	462a      	mov	r2, r5
 8000e6e:	4649      	mov	r1, r9
 8000e70:	4640      	mov	r0, r8
 8000e72:	47d0      	blx	sl
 8000e74:	3001      	adds	r0, #1
 8000e76:	d0ab      	beq.n	8000dd0 <_printf_i+0x164>
 8000e78:	6823      	ldr	r3, [r4, #0]
 8000e7a:	079b      	lsls	r3, r3, #30
 8000e7c:	d413      	bmi.n	8000ea6 <_printf_i+0x23a>
 8000e7e:	68e0      	ldr	r0, [r4, #12]
 8000e80:	9b03      	ldr	r3, [sp, #12]
 8000e82:	4298      	cmp	r0, r3
 8000e84:	bfb8      	it	lt
 8000e86:	4618      	movlt	r0, r3
 8000e88:	e7a4      	b.n	8000dd4 <_printf_i+0x168>
 8000e8a:	2301      	movs	r3, #1
 8000e8c:	4632      	mov	r2, r6
 8000e8e:	4649      	mov	r1, r9
 8000e90:	4640      	mov	r0, r8
 8000e92:	47d0      	blx	sl
 8000e94:	3001      	adds	r0, #1
 8000e96:	d09b      	beq.n	8000dd0 <_printf_i+0x164>
 8000e98:	3501      	adds	r5, #1
 8000e9a:	68e3      	ldr	r3, [r4, #12]
 8000e9c:	9903      	ldr	r1, [sp, #12]
 8000e9e:	1a5b      	subs	r3, r3, r1
 8000ea0:	42ab      	cmp	r3, r5
 8000ea2:	dcf2      	bgt.n	8000e8a <_printf_i+0x21e>
 8000ea4:	e7eb      	b.n	8000e7e <_printf_i+0x212>
 8000ea6:	2500      	movs	r5, #0
 8000ea8:	f104 0619 	add.w	r6, r4, #25
 8000eac:	e7f5      	b.n	8000e9a <_printf_i+0x22e>
 8000eae:	bf00      	nop
 8000eb0:	08001559 	.word	0x08001559
 8000eb4:	0800156a 	.word	0x0800156a

08000eb8 <_sbrk_r>:
 8000eb8:	b538      	push	{r3, r4, r5, lr}
 8000eba:	4d06      	ldr	r5, [pc, #24]	; (8000ed4 <_sbrk_r+0x1c>)
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	4604      	mov	r4, r0
 8000ec0:	4608      	mov	r0, r1
 8000ec2:	602b      	str	r3, [r5, #0]
 8000ec4:	f7ff fad4 	bl	8000470 <_sbrk>
 8000ec8:	1c43      	adds	r3, r0, #1
 8000eca:	d102      	bne.n	8000ed2 <_sbrk_r+0x1a>
 8000ecc:	682b      	ldr	r3, [r5, #0]
 8000ece:	b103      	cbz	r3, 8000ed2 <_sbrk_r+0x1a>
 8000ed0:	6023      	str	r3, [r4, #0]
 8000ed2:	bd38      	pop	{r3, r4, r5, pc}
 8000ed4:	20000090 	.word	0x20000090

08000ed8 <__sread>:
 8000ed8:	b510      	push	{r4, lr}
 8000eda:	460c      	mov	r4, r1
 8000edc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ee0:	f000 fab2 	bl	8001448 <_read_r>
 8000ee4:	2800      	cmp	r0, #0
 8000ee6:	bfab      	itete	ge
 8000ee8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000eea:	89a3      	ldrhlt	r3, [r4, #12]
 8000eec:	181b      	addge	r3, r3, r0
 8000eee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ef2:	bfac      	ite	ge
 8000ef4:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ef6:	81a3      	strhlt	r3, [r4, #12]
 8000ef8:	bd10      	pop	{r4, pc}

08000efa <__swrite>:
 8000efa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000efe:	461f      	mov	r7, r3
 8000f00:	898b      	ldrh	r3, [r1, #12]
 8000f02:	05db      	lsls	r3, r3, #23
 8000f04:	4605      	mov	r5, r0
 8000f06:	460c      	mov	r4, r1
 8000f08:	4616      	mov	r6, r2
 8000f0a:	d505      	bpl.n	8000f18 <__swrite+0x1e>
 8000f0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f10:	2302      	movs	r3, #2
 8000f12:	2200      	movs	r2, #0
 8000f14:	f000 f9c8 	bl	80012a8 <_lseek_r>
 8000f18:	89a3      	ldrh	r3, [r4, #12]
 8000f1a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000f1e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f22:	81a3      	strh	r3, [r4, #12]
 8000f24:	4632      	mov	r2, r6
 8000f26:	463b      	mov	r3, r7
 8000f28:	4628      	mov	r0, r5
 8000f2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f2e:	f000 b869 	b.w	8001004 <_write_r>

08000f32 <__sseek>:
 8000f32:	b510      	push	{r4, lr}
 8000f34:	460c      	mov	r4, r1
 8000f36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f3a:	f000 f9b5 	bl	80012a8 <_lseek_r>
 8000f3e:	1c43      	adds	r3, r0, #1
 8000f40:	89a3      	ldrh	r3, [r4, #12]
 8000f42:	bf15      	itete	ne
 8000f44:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f46:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f4a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f4e:	81a3      	strheq	r3, [r4, #12]
 8000f50:	bf18      	it	ne
 8000f52:	81a3      	strhne	r3, [r4, #12]
 8000f54:	bd10      	pop	{r4, pc}

08000f56 <__sclose>:
 8000f56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f5a:	f000 b8d3 	b.w	8001104 <_close_r>
	...

08000f60 <__swbuf_r>:
 8000f60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f62:	460e      	mov	r6, r1
 8000f64:	4614      	mov	r4, r2
 8000f66:	4605      	mov	r5, r0
 8000f68:	b118      	cbz	r0, 8000f72 <__swbuf_r+0x12>
 8000f6a:	6983      	ldr	r3, [r0, #24]
 8000f6c:	b90b      	cbnz	r3, 8000f72 <__swbuf_r+0x12>
 8000f6e:	f7ff fb81 	bl	8000674 <__sinit>
 8000f72:	4b21      	ldr	r3, [pc, #132]	; (8000ff8 <__swbuf_r+0x98>)
 8000f74:	429c      	cmp	r4, r3
 8000f76:	d12b      	bne.n	8000fd0 <__swbuf_r+0x70>
 8000f78:	686c      	ldr	r4, [r5, #4]
 8000f7a:	69a3      	ldr	r3, [r4, #24]
 8000f7c:	60a3      	str	r3, [r4, #8]
 8000f7e:	89a3      	ldrh	r3, [r4, #12]
 8000f80:	071a      	lsls	r2, r3, #28
 8000f82:	d52f      	bpl.n	8000fe4 <__swbuf_r+0x84>
 8000f84:	6923      	ldr	r3, [r4, #16]
 8000f86:	b36b      	cbz	r3, 8000fe4 <__swbuf_r+0x84>
 8000f88:	6923      	ldr	r3, [r4, #16]
 8000f8a:	6820      	ldr	r0, [r4, #0]
 8000f8c:	1ac0      	subs	r0, r0, r3
 8000f8e:	6963      	ldr	r3, [r4, #20]
 8000f90:	b2f6      	uxtb	r6, r6
 8000f92:	4283      	cmp	r3, r0
 8000f94:	4637      	mov	r7, r6
 8000f96:	dc04      	bgt.n	8000fa2 <__swbuf_r+0x42>
 8000f98:	4621      	mov	r1, r4
 8000f9a:	4628      	mov	r0, r5
 8000f9c:	f000 f948 	bl	8001230 <_fflush_r>
 8000fa0:	bb30      	cbnz	r0, 8000ff0 <__swbuf_r+0x90>
 8000fa2:	68a3      	ldr	r3, [r4, #8]
 8000fa4:	3b01      	subs	r3, #1
 8000fa6:	60a3      	str	r3, [r4, #8]
 8000fa8:	6823      	ldr	r3, [r4, #0]
 8000faa:	1c5a      	adds	r2, r3, #1
 8000fac:	6022      	str	r2, [r4, #0]
 8000fae:	701e      	strb	r6, [r3, #0]
 8000fb0:	6963      	ldr	r3, [r4, #20]
 8000fb2:	3001      	adds	r0, #1
 8000fb4:	4283      	cmp	r3, r0
 8000fb6:	d004      	beq.n	8000fc2 <__swbuf_r+0x62>
 8000fb8:	89a3      	ldrh	r3, [r4, #12]
 8000fba:	07db      	lsls	r3, r3, #31
 8000fbc:	d506      	bpl.n	8000fcc <__swbuf_r+0x6c>
 8000fbe:	2e0a      	cmp	r6, #10
 8000fc0:	d104      	bne.n	8000fcc <__swbuf_r+0x6c>
 8000fc2:	4621      	mov	r1, r4
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	f000 f933 	bl	8001230 <_fflush_r>
 8000fca:	b988      	cbnz	r0, 8000ff0 <__swbuf_r+0x90>
 8000fcc:	4638      	mov	r0, r7
 8000fce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000fd0:	4b0a      	ldr	r3, [pc, #40]	; (8000ffc <__swbuf_r+0x9c>)
 8000fd2:	429c      	cmp	r4, r3
 8000fd4:	d101      	bne.n	8000fda <__swbuf_r+0x7a>
 8000fd6:	68ac      	ldr	r4, [r5, #8]
 8000fd8:	e7cf      	b.n	8000f7a <__swbuf_r+0x1a>
 8000fda:	4b09      	ldr	r3, [pc, #36]	; (8001000 <__swbuf_r+0xa0>)
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	bf08      	it	eq
 8000fe0:	68ec      	ldreq	r4, [r5, #12]
 8000fe2:	e7ca      	b.n	8000f7a <__swbuf_r+0x1a>
 8000fe4:	4621      	mov	r1, r4
 8000fe6:	4628      	mov	r0, r5
 8000fe8:	f000 f81e 	bl	8001028 <__swsetup_r>
 8000fec:	2800      	cmp	r0, #0
 8000fee:	d0cb      	beq.n	8000f88 <__swbuf_r+0x28>
 8000ff0:	f04f 37ff 	mov.w	r7, #4294967295
 8000ff4:	e7ea      	b.n	8000fcc <__swbuf_r+0x6c>
 8000ff6:	bf00      	nop
 8000ff8:	08001508 	.word	0x08001508
 8000ffc:	08001528 	.word	0x08001528
 8001000:	080014e8 	.word	0x080014e8

08001004 <_write_r>:
 8001004:	b538      	push	{r3, r4, r5, lr}
 8001006:	4d07      	ldr	r5, [pc, #28]	; (8001024 <_write_r+0x20>)
 8001008:	4604      	mov	r4, r0
 800100a:	4608      	mov	r0, r1
 800100c:	4611      	mov	r1, r2
 800100e:	2200      	movs	r2, #0
 8001010:	602a      	str	r2, [r5, #0]
 8001012:	461a      	mov	r2, r3
 8001014:	f7ff f9db 	bl	80003ce <_write>
 8001018:	1c43      	adds	r3, r0, #1
 800101a:	d102      	bne.n	8001022 <_write_r+0x1e>
 800101c:	682b      	ldr	r3, [r5, #0]
 800101e:	b103      	cbz	r3, 8001022 <_write_r+0x1e>
 8001020:	6023      	str	r3, [r4, #0]
 8001022:	bd38      	pop	{r3, r4, r5, pc}
 8001024:	20000090 	.word	0x20000090

08001028 <__swsetup_r>:
 8001028:	4b32      	ldr	r3, [pc, #200]	; (80010f4 <__swsetup_r+0xcc>)
 800102a:	b570      	push	{r4, r5, r6, lr}
 800102c:	681d      	ldr	r5, [r3, #0]
 800102e:	4606      	mov	r6, r0
 8001030:	460c      	mov	r4, r1
 8001032:	b125      	cbz	r5, 800103e <__swsetup_r+0x16>
 8001034:	69ab      	ldr	r3, [r5, #24]
 8001036:	b913      	cbnz	r3, 800103e <__swsetup_r+0x16>
 8001038:	4628      	mov	r0, r5
 800103a:	f7ff fb1b 	bl	8000674 <__sinit>
 800103e:	4b2e      	ldr	r3, [pc, #184]	; (80010f8 <__swsetup_r+0xd0>)
 8001040:	429c      	cmp	r4, r3
 8001042:	d10f      	bne.n	8001064 <__swsetup_r+0x3c>
 8001044:	686c      	ldr	r4, [r5, #4]
 8001046:	89a3      	ldrh	r3, [r4, #12]
 8001048:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800104c:	0719      	lsls	r1, r3, #28
 800104e:	d42c      	bmi.n	80010aa <__swsetup_r+0x82>
 8001050:	06dd      	lsls	r5, r3, #27
 8001052:	d411      	bmi.n	8001078 <__swsetup_r+0x50>
 8001054:	2309      	movs	r3, #9
 8001056:	6033      	str	r3, [r6, #0]
 8001058:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800105c:	81a3      	strh	r3, [r4, #12]
 800105e:	f04f 30ff 	mov.w	r0, #4294967295
 8001062:	e03e      	b.n	80010e2 <__swsetup_r+0xba>
 8001064:	4b25      	ldr	r3, [pc, #148]	; (80010fc <__swsetup_r+0xd4>)
 8001066:	429c      	cmp	r4, r3
 8001068:	d101      	bne.n	800106e <__swsetup_r+0x46>
 800106a:	68ac      	ldr	r4, [r5, #8]
 800106c:	e7eb      	b.n	8001046 <__swsetup_r+0x1e>
 800106e:	4b24      	ldr	r3, [pc, #144]	; (8001100 <__swsetup_r+0xd8>)
 8001070:	429c      	cmp	r4, r3
 8001072:	bf08      	it	eq
 8001074:	68ec      	ldreq	r4, [r5, #12]
 8001076:	e7e6      	b.n	8001046 <__swsetup_r+0x1e>
 8001078:	0758      	lsls	r0, r3, #29
 800107a:	d512      	bpl.n	80010a2 <__swsetup_r+0x7a>
 800107c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800107e:	b141      	cbz	r1, 8001092 <__swsetup_r+0x6a>
 8001080:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001084:	4299      	cmp	r1, r3
 8001086:	d002      	beq.n	800108e <__swsetup_r+0x66>
 8001088:	4630      	mov	r0, r6
 800108a:	f000 f991 	bl	80013b0 <_free_r>
 800108e:	2300      	movs	r3, #0
 8001090:	6363      	str	r3, [r4, #52]	; 0x34
 8001092:	89a3      	ldrh	r3, [r4, #12]
 8001094:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001098:	81a3      	strh	r3, [r4, #12]
 800109a:	2300      	movs	r3, #0
 800109c:	6063      	str	r3, [r4, #4]
 800109e:	6923      	ldr	r3, [r4, #16]
 80010a0:	6023      	str	r3, [r4, #0]
 80010a2:	89a3      	ldrh	r3, [r4, #12]
 80010a4:	f043 0308 	orr.w	r3, r3, #8
 80010a8:	81a3      	strh	r3, [r4, #12]
 80010aa:	6923      	ldr	r3, [r4, #16]
 80010ac:	b94b      	cbnz	r3, 80010c2 <__swsetup_r+0x9a>
 80010ae:	89a3      	ldrh	r3, [r4, #12]
 80010b0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80010b4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010b8:	d003      	beq.n	80010c2 <__swsetup_r+0x9a>
 80010ba:	4621      	mov	r1, r4
 80010bc:	4630      	mov	r0, r6
 80010be:	f000 f92b 	bl	8001318 <__smakebuf_r>
 80010c2:	89a0      	ldrh	r0, [r4, #12]
 80010c4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80010c8:	f010 0301 	ands.w	r3, r0, #1
 80010cc:	d00a      	beq.n	80010e4 <__swsetup_r+0xbc>
 80010ce:	2300      	movs	r3, #0
 80010d0:	60a3      	str	r3, [r4, #8]
 80010d2:	6963      	ldr	r3, [r4, #20]
 80010d4:	425b      	negs	r3, r3
 80010d6:	61a3      	str	r3, [r4, #24]
 80010d8:	6923      	ldr	r3, [r4, #16]
 80010da:	b943      	cbnz	r3, 80010ee <__swsetup_r+0xc6>
 80010dc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80010e0:	d1ba      	bne.n	8001058 <__swsetup_r+0x30>
 80010e2:	bd70      	pop	{r4, r5, r6, pc}
 80010e4:	0781      	lsls	r1, r0, #30
 80010e6:	bf58      	it	pl
 80010e8:	6963      	ldrpl	r3, [r4, #20]
 80010ea:	60a3      	str	r3, [r4, #8]
 80010ec:	e7f4      	b.n	80010d8 <__swsetup_r+0xb0>
 80010ee:	2000      	movs	r0, #0
 80010f0:	e7f7      	b.n	80010e2 <__swsetup_r+0xba>
 80010f2:	bf00      	nop
 80010f4:	20000000 	.word	0x20000000
 80010f8:	08001508 	.word	0x08001508
 80010fc:	08001528 	.word	0x08001528
 8001100:	080014e8 	.word	0x080014e8

08001104 <_close_r>:
 8001104:	b538      	push	{r3, r4, r5, lr}
 8001106:	4d06      	ldr	r5, [pc, #24]	; (8001120 <_close_r+0x1c>)
 8001108:	2300      	movs	r3, #0
 800110a:	4604      	mov	r4, r0
 800110c:	4608      	mov	r0, r1
 800110e:	602b      	str	r3, [r5, #0]
 8001110:	f7ff f979 	bl	8000406 <_close>
 8001114:	1c43      	adds	r3, r0, #1
 8001116:	d102      	bne.n	800111e <_close_r+0x1a>
 8001118:	682b      	ldr	r3, [r5, #0]
 800111a:	b103      	cbz	r3, 800111e <_close_r+0x1a>
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	bd38      	pop	{r3, r4, r5, pc}
 8001120:	20000090 	.word	0x20000090

08001124 <__sflush_r>:
 8001124:	898a      	ldrh	r2, [r1, #12]
 8001126:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800112a:	4605      	mov	r5, r0
 800112c:	0710      	lsls	r0, r2, #28
 800112e:	460c      	mov	r4, r1
 8001130:	d458      	bmi.n	80011e4 <__sflush_r+0xc0>
 8001132:	684b      	ldr	r3, [r1, #4]
 8001134:	2b00      	cmp	r3, #0
 8001136:	dc05      	bgt.n	8001144 <__sflush_r+0x20>
 8001138:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800113a:	2b00      	cmp	r3, #0
 800113c:	dc02      	bgt.n	8001144 <__sflush_r+0x20>
 800113e:	2000      	movs	r0, #0
 8001140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001144:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001146:	2e00      	cmp	r6, #0
 8001148:	d0f9      	beq.n	800113e <__sflush_r+0x1a>
 800114a:	2300      	movs	r3, #0
 800114c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001150:	682f      	ldr	r7, [r5, #0]
 8001152:	602b      	str	r3, [r5, #0]
 8001154:	d032      	beq.n	80011bc <__sflush_r+0x98>
 8001156:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001158:	89a3      	ldrh	r3, [r4, #12]
 800115a:	075a      	lsls	r2, r3, #29
 800115c:	d505      	bpl.n	800116a <__sflush_r+0x46>
 800115e:	6863      	ldr	r3, [r4, #4]
 8001160:	1ac0      	subs	r0, r0, r3
 8001162:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001164:	b10b      	cbz	r3, 800116a <__sflush_r+0x46>
 8001166:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001168:	1ac0      	subs	r0, r0, r3
 800116a:	2300      	movs	r3, #0
 800116c:	4602      	mov	r2, r0
 800116e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001170:	6a21      	ldr	r1, [r4, #32]
 8001172:	4628      	mov	r0, r5
 8001174:	47b0      	blx	r6
 8001176:	1c43      	adds	r3, r0, #1
 8001178:	89a3      	ldrh	r3, [r4, #12]
 800117a:	d106      	bne.n	800118a <__sflush_r+0x66>
 800117c:	6829      	ldr	r1, [r5, #0]
 800117e:	291d      	cmp	r1, #29
 8001180:	d82c      	bhi.n	80011dc <__sflush_r+0xb8>
 8001182:	4a2a      	ldr	r2, [pc, #168]	; (800122c <__sflush_r+0x108>)
 8001184:	40ca      	lsrs	r2, r1
 8001186:	07d6      	lsls	r6, r2, #31
 8001188:	d528      	bpl.n	80011dc <__sflush_r+0xb8>
 800118a:	2200      	movs	r2, #0
 800118c:	6062      	str	r2, [r4, #4]
 800118e:	04d9      	lsls	r1, r3, #19
 8001190:	6922      	ldr	r2, [r4, #16]
 8001192:	6022      	str	r2, [r4, #0]
 8001194:	d504      	bpl.n	80011a0 <__sflush_r+0x7c>
 8001196:	1c42      	adds	r2, r0, #1
 8001198:	d101      	bne.n	800119e <__sflush_r+0x7a>
 800119a:	682b      	ldr	r3, [r5, #0]
 800119c:	b903      	cbnz	r3, 80011a0 <__sflush_r+0x7c>
 800119e:	6560      	str	r0, [r4, #84]	; 0x54
 80011a0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80011a2:	602f      	str	r7, [r5, #0]
 80011a4:	2900      	cmp	r1, #0
 80011a6:	d0ca      	beq.n	800113e <__sflush_r+0x1a>
 80011a8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011ac:	4299      	cmp	r1, r3
 80011ae:	d002      	beq.n	80011b6 <__sflush_r+0x92>
 80011b0:	4628      	mov	r0, r5
 80011b2:	f000 f8fd 	bl	80013b0 <_free_r>
 80011b6:	2000      	movs	r0, #0
 80011b8:	6360      	str	r0, [r4, #52]	; 0x34
 80011ba:	e7c1      	b.n	8001140 <__sflush_r+0x1c>
 80011bc:	6a21      	ldr	r1, [r4, #32]
 80011be:	2301      	movs	r3, #1
 80011c0:	4628      	mov	r0, r5
 80011c2:	47b0      	blx	r6
 80011c4:	1c41      	adds	r1, r0, #1
 80011c6:	d1c7      	bne.n	8001158 <__sflush_r+0x34>
 80011c8:	682b      	ldr	r3, [r5, #0]
 80011ca:	2b00      	cmp	r3, #0
 80011cc:	d0c4      	beq.n	8001158 <__sflush_r+0x34>
 80011ce:	2b1d      	cmp	r3, #29
 80011d0:	d001      	beq.n	80011d6 <__sflush_r+0xb2>
 80011d2:	2b16      	cmp	r3, #22
 80011d4:	d101      	bne.n	80011da <__sflush_r+0xb6>
 80011d6:	602f      	str	r7, [r5, #0]
 80011d8:	e7b1      	b.n	800113e <__sflush_r+0x1a>
 80011da:	89a3      	ldrh	r3, [r4, #12]
 80011dc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80011e0:	81a3      	strh	r3, [r4, #12]
 80011e2:	e7ad      	b.n	8001140 <__sflush_r+0x1c>
 80011e4:	690f      	ldr	r7, [r1, #16]
 80011e6:	2f00      	cmp	r7, #0
 80011e8:	d0a9      	beq.n	800113e <__sflush_r+0x1a>
 80011ea:	0793      	lsls	r3, r2, #30
 80011ec:	680e      	ldr	r6, [r1, #0]
 80011ee:	bf08      	it	eq
 80011f0:	694b      	ldreq	r3, [r1, #20]
 80011f2:	600f      	str	r7, [r1, #0]
 80011f4:	bf18      	it	ne
 80011f6:	2300      	movne	r3, #0
 80011f8:	eba6 0807 	sub.w	r8, r6, r7
 80011fc:	608b      	str	r3, [r1, #8]
 80011fe:	f1b8 0f00 	cmp.w	r8, #0
 8001202:	dd9c      	ble.n	800113e <__sflush_r+0x1a>
 8001204:	6a21      	ldr	r1, [r4, #32]
 8001206:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001208:	4643      	mov	r3, r8
 800120a:	463a      	mov	r2, r7
 800120c:	4628      	mov	r0, r5
 800120e:	47b0      	blx	r6
 8001210:	2800      	cmp	r0, #0
 8001212:	dc06      	bgt.n	8001222 <__sflush_r+0xfe>
 8001214:	89a3      	ldrh	r3, [r4, #12]
 8001216:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800121a:	81a3      	strh	r3, [r4, #12]
 800121c:	f04f 30ff 	mov.w	r0, #4294967295
 8001220:	e78e      	b.n	8001140 <__sflush_r+0x1c>
 8001222:	4407      	add	r7, r0
 8001224:	eba8 0800 	sub.w	r8, r8, r0
 8001228:	e7e9      	b.n	80011fe <__sflush_r+0xda>
 800122a:	bf00      	nop
 800122c:	20400001 	.word	0x20400001

08001230 <_fflush_r>:
 8001230:	b538      	push	{r3, r4, r5, lr}
 8001232:	690b      	ldr	r3, [r1, #16]
 8001234:	4605      	mov	r5, r0
 8001236:	460c      	mov	r4, r1
 8001238:	b913      	cbnz	r3, 8001240 <_fflush_r+0x10>
 800123a:	2500      	movs	r5, #0
 800123c:	4628      	mov	r0, r5
 800123e:	bd38      	pop	{r3, r4, r5, pc}
 8001240:	b118      	cbz	r0, 800124a <_fflush_r+0x1a>
 8001242:	6983      	ldr	r3, [r0, #24]
 8001244:	b90b      	cbnz	r3, 800124a <_fflush_r+0x1a>
 8001246:	f7ff fa15 	bl	8000674 <__sinit>
 800124a:	4b14      	ldr	r3, [pc, #80]	; (800129c <_fflush_r+0x6c>)
 800124c:	429c      	cmp	r4, r3
 800124e:	d11b      	bne.n	8001288 <_fflush_r+0x58>
 8001250:	686c      	ldr	r4, [r5, #4]
 8001252:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001256:	2b00      	cmp	r3, #0
 8001258:	d0ef      	beq.n	800123a <_fflush_r+0xa>
 800125a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800125c:	07d0      	lsls	r0, r2, #31
 800125e:	d404      	bmi.n	800126a <_fflush_r+0x3a>
 8001260:	0599      	lsls	r1, r3, #22
 8001262:	d402      	bmi.n	800126a <_fflush_r+0x3a>
 8001264:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001266:	f7ff faa3 	bl	80007b0 <__retarget_lock_acquire_recursive>
 800126a:	4628      	mov	r0, r5
 800126c:	4621      	mov	r1, r4
 800126e:	f7ff ff59 	bl	8001124 <__sflush_r>
 8001272:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001274:	07da      	lsls	r2, r3, #31
 8001276:	4605      	mov	r5, r0
 8001278:	d4e0      	bmi.n	800123c <_fflush_r+0xc>
 800127a:	89a3      	ldrh	r3, [r4, #12]
 800127c:	059b      	lsls	r3, r3, #22
 800127e:	d4dd      	bmi.n	800123c <_fflush_r+0xc>
 8001280:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001282:	f7ff fa96 	bl	80007b2 <__retarget_lock_release_recursive>
 8001286:	e7d9      	b.n	800123c <_fflush_r+0xc>
 8001288:	4b05      	ldr	r3, [pc, #20]	; (80012a0 <_fflush_r+0x70>)
 800128a:	429c      	cmp	r4, r3
 800128c:	d101      	bne.n	8001292 <_fflush_r+0x62>
 800128e:	68ac      	ldr	r4, [r5, #8]
 8001290:	e7df      	b.n	8001252 <_fflush_r+0x22>
 8001292:	4b04      	ldr	r3, [pc, #16]	; (80012a4 <_fflush_r+0x74>)
 8001294:	429c      	cmp	r4, r3
 8001296:	bf08      	it	eq
 8001298:	68ec      	ldreq	r4, [r5, #12]
 800129a:	e7da      	b.n	8001252 <_fflush_r+0x22>
 800129c:	08001508 	.word	0x08001508
 80012a0:	08001528 	.word	0x08001528
 80012a4:	080014e8 	.word	0x080014e8

080012a8 <_lseek_r>:
 80012a8:	b538      	push	{r3, r4, r5, lr}
 80012aa:	4d07      	ldr	r5, [pc, #28]	; (80012c8 <_lseek_r+0x20>)
 80012ac:	4604      	mov	r4, r0
 80012ae:	4608      	mov	r0, r1
 80012b0:	4611      	mov	r1, r2
 80012b2:	2200      	movs	r2, #0
 80012b4:	602a      	str	r2, [r5, #0]
 80012b6:	461a      	mov	r2, r3
 80012b8:	f7ff f8cc 	bl	8000454 <_lseek>
 80012bc:	1c43      	adds	r3, r0, #1
 80012be:	d102      	bne.n	80012c6 <_lseek_r+0x1e>
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	b103      	cbz	r3, 80012c6 <_lseek_r+0x1e>
 80012c4:	6023      	str	r3, [r4, #0]
 80012c6:	bd38      	pop	{r3, r4, r5, pc}
 80012c8:	20000090 	.word	0x20000090

080012cc <__swhatbuf_r>:
 80012cc:	b570      	push	{r4, r5, r6, lr}
 80012ce:	460e      	mov	r6, r1
 80012d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80012d4:	2900      	cmp	r1, #0
 80012d6:	b096      	sub	sp, #88	; 0x58
 80012d8:	4614      	mov	r4, r2
 80012da:	461d      	mov	r5, r3
 80012dc:	da08      	bge.n	80012f0 <__swhatbuf_r+0x24>
 80012de:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80012e2:	2200      	movs	r2, #0
 80012e4:	602a      	str	r2, [r5, #0]
 80012e6:	061a      	lsls	r2, r3, #24
 80012e8:	d410      	bmi.n	800130c <__swhatbuf_r+0x40>
 80012ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80012ee:	e00e      	b.n	800130e <__swhatbuf_r+0x42>
 80012f0:	466a      	mov	r2, sp
 80012f2:	f000 f8bb 	bl	800146c <_fstat_r>
 80012f6:	2800      	cmp	r0, #0
 80012f8:	dbf1      	blt.n	80012de <__swhatbuf_r+0x12>
 80012fa:	9a01      	ldr	r2, [sp, #4]
 80012fc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001300:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001304:	425a      	negs	r2, r3
 8001306:	415a      	adcs	r2, r3
 8001308:	602a      	str	r2, [r5, #0]
 800130a:	e7ee      	b.n	80012ea <__swhatbuf_r+0x1e>
 800130c:	2340      	movs	r3, #64	; 0x40
 800130e:	2000      	movs	r0, #0
 8001310:	6023      	str	r3, [r4, #0]
 8001312:	b016      	add	sp, #88	; 0x58
 8001314:	bd70      	pop	{r4, r5, r6, pc}
	...

08001318 <__smakebuf_r>:
 8001318:	898b      	ldrh	r3, [r1, #12]
 800131a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800131c:	079d      	lsls	r5, r3, #30
 800131e:	4606      	mov	r6, r0
 8001320:	460c      	mov	r4, r1
 8001322:	d507      	bpl.n	8001334 <__smakebuf_r+0x1c>
 8001324:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001328:	6023      	str	r3, [r4, #0]
 800132a:	6123      	str	r3, [r4, #16]
 800132c:	2301      	movs	r3, #1
 800132e:	6163      	str	r3, [r4, #20]
 8001330:	b002      	add	sp, #8
 8001332:	bd70      	pop	{r4, r5, r6, pc}
 8001334:	ab01      	add	r3, sp, #4
 8001336:	466a      	mov	r2, sp
 8001338:	f7ff ffc8 	bl	80012cc <__swhatbuf_r>
 800133c:	9900      	ldr	r1, [sp, #0]
 800133e:	4605      	mov	r5, r0
 8001340:	4630      	mov	r0, r6
 8001342:	f7ff fa57 	bl	80007f4 <_malloc_r>
 8001346:	b948      	cbnz	r0, 800135c <__smakebuf_r+0x44>
 8001348:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800134c:	059a      	lsls	r2, r3, #22
 800134e:	d4ef      	bmi.n	8001330 <__smakebuf_r+0x18>
 8001350:	f023 0303 	bic.w	r3, r3, #3
 8001354:	f043 0302 	orr.w	r3, r3, #2
 8001358:	81a3      	strh	r3, [r4, #12]
 800135a:	e7e3      	b.n	8001324 <__smakebuf_r+0xc>
 800135c:	4b0d      	ldr	r3, [pc, #52]	; (8001394 <__smakebuf_r+0x7c>)
 800135e:	62b3      	str	r3, [r6, #40]	; 0x28
 8001360:	89a3      	ldrh	r3, [r4, #12]
 8001362:	6020      	str	r0, [r4, #0]
 8001364:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001368:	81a3      	strh	r3, [r4, #12]
 800136a:	9b00      	ldr	r3, [sp, #0]
 800136c:	6163      	str	r3, [r4, #20]
 800136e:	9b01      	ldr	r3, [sp, #4]
 8001370:	6120      	str	r0, [r4, #16]
 8001372:	b15b      	cbz	r3, 800138c <__smakebuf_r+0x74>
 8001374:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001378:	4630      	mov	r0, r6
 800137a:	f000 f889 	bl	8001490 <_isatty_r>
 800137e:	b128      	cbz	r0, 800138c <__smakebuf_r+0x74>
 8001380:	89a3      	ldrh	r3, [r4, #12]
 8001382:	f023 0303 	bic.w	r3, r3, #3
 8001386:	f043 0301 	orr.w	r3, r3, #1
 800138a:	81a3      	strh	r3, [r4, #12]
 800138c:	89a0      	ldrh	r0, [r4, #12]
 800138e:	4305      	orrs	r5, r0
 8001390:	81a5      	strh	r5, [r4, #12]
 8001392:	e7cd      	b.n	8001330 <__smakebuf_r+0x18>
 8001394:	0800060d 	.word	0x0800060d

08001398 <__malloc_lock>:
 8001398:	4801      	ldr	r0, [pc, #4]	; (80013a0 <__malloc_lock+0x8>)
 800139a:	f7ff ba09 	b.w	80007b0 <__retarget_lock_acquire_recursive>
 800139e:	bf00      	nop
 80013a0:	20000084 	.word	0x20000084

080013a4 <__malloc_unlock>:
 80013a4:	4801      	ldr	r0, [pc, #4]	; (80013ac <__malloc_unlock+0x8>)
 80013a6:	f7ff ba04 	b.w	80007b2 <__retarget_lock_release_recursive>
 80013aa:	bf00      	nop
 80013ac:	20000084 	.word	0x20000084

080013b0 <_free_r>:
 80013b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013b2:	2900      	cmp	r1, #0
 80013b4:	d044      	beq.n	8001440 <_free_r+0x90>
 80013b6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80013ba:	9001      	str	r0, [sp, #4]
 80013bc:	2b00      	cmp	r3, #0
 80013be:	f1a1 0404 	sub.w	r4, r1, #4
 80013c2:	bfb8      	it	lt
 80013c4:	18e4      	addlt	r4, r4, r3
 80013c6:	f7ff ffe7 	bl	8001398 <__malloc_lock>
 80013ca:	4a1e      	ldr	r2, [pc, #120]	; (8001444 <_free_r+0x94>)
 80013cc:	9801      	ldr	r0, [sp, #4]
 80013ce:	6813      	ldr	r3, [r2, #0]
 80013d0:	b933      	cbnz	r3, 80013e0 <_free_r+0x30>
 80013d2:	6063      	str	r3, [r4, #4]
 80013d4:	6014      	str	r4, [r2, #0]
 80013d6:	b003      	add	sp, #12
 80013d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80013dc:	f7ff bfe2 	b.w	80013a4 <__malloc_unlock>
 80013e0:	42a3      	cmp	r3, r4
 80013e2:	d908      	bls.n	80013f6 <_free_r+0x46>
 80013e4:	6825      	ldr	r5, [r4, #0]
 80013e6:	1961      	adds	r1, r4, r5
 80013e8:	428b      	cmp	r3, r1
 80013ea:	bf01      	itttt	eq
 80013ec:	6819      	ldreq	r1, [r3, #0]
 80013ee:	685b      	ldreq	r3, [r3, #4]
 80013f0:	1949      	addeq	r1, r1, r5
 80013f2:	6021      	streq	r1, [r4, #0]
 80013f4:	e7ed      	b.n	80013d2 <_free_r+0x22>
 80013f6:	461a      	mov	r2, r3
 80013f8:	685b      	ldr	r3, [r3, #4]
 80013fa:	b10b      	cbz	r3, 8001400 <_free_r+0x50>
 80013fc:	42a3      	cmp	r3, r4
 80013fe:	d9fa      	bls.n	80013f6 <_free_r+0x46>
 8001400:	6811      	ldr	r1, [r2, #0]
 8001402:	1855      	adds	r5, r2, r1
 8001404:	42a5      	cmp	r5, r4
 8001406:	d10b      	bne.n	8001420 <_free_r+0x70>
 8001408:	6824      	ldr	r4, [r4, #0]
 800140a:	4421      	add	r1, r4
 800140c:	1854      	adds	r4, r2, r1
 800140e:	42a3      	cmp	r3, r4
 8001410:	6011      	str	r1, [r2, #0]
 8001412:	d1e0      	bne.n	80013d6 <_free_r+0x26>
 8001414:	681c      	ldr	r4, [r3, #0]
 8001416:	685b      	ldr	r3, [r3, #4]
 8001418:	6053      	str	r3, [r2, #4]
 800141a:	4421      	add	r1, r4
 800141c:	6011      	str	r1, [r2, #0]
 800141e:	e7da      	b.n	80013d6 <_free_r+0x26>
 8001420:	d902      	bls.n	8001428 <_free_r+0x78>
 8001422:	230c      	movs	r3, #12
 8001424:	6003      	str	r3, [r0, #0]
 8001426:	e7d6      	b.n	80013d6 <_free_r+0x26>
 8001428:	6825      	ldr	r5, [r4, #0]
 800142a:	1961      	adds	r1, r4, r5
 800142c:	428b      	cmp	r3, r1
 800142e:	bf04      	itt	eq
 8001430:	6819      	ldreq	r1, [r3, #0]
 8001432:	685b      	ldreq	r3, [r3, #4]
 8001434:	6063      	str	r3, [r4, #4]
 8001436:	bf04      	itt	eq
 8001438:	1949      	addeq	r1, r1, r5
 800143a:	6021      	streq	r1, [r4, #0]
 800143c:	6054      	str	r4, [r2, #4]
 800143e:	e7ca      	b.n	80013d6 <_free_r+0x26>
 8001440:	b003      	add	sp, #12
 8001442:	bd30      	pop	{r4, r5, pc}
 8001444:	20000088 	.word	0x20000088

08001448 <_read_r>:
 8001448:	b538      	push	{r3, r4, r5, lr}
 800144a:	4d07      	ldr	r5, [pc, #28]	; (8001468 <_read_r+0x20>)
 800144c:	4604      	mov	r4, r0
 800144e:	4608      	mov	r0, r1
 8001450:	4611      	mov	r1, r2
 8001452:	2200      	movs	r2, #0
 8001454:	602a      	str	r2, [r5, #0]
 8001456:	461a      	mov	r2, r3
 8001458:	f7fe ff9c 	bl	8000394 <_read>
 800145c:	1c43      	adds	r3, r0, #1
 800145e:	d102      	bne.n	8001466 <_read_r+0x1e>
 8001460:	682b      	ldr	r3, [r5, #0]
 8001462:	b103      	cbz	r3, 8001466 <_read_r+0x1e>
 8001464:	6023      	str	r3, [r4, #0]
 8001466:	bd38      	pop	{r3, r4, r5, pc}
 8001468:	20000090 	.word	0x20000090

0800146c <_fstat_r>:
 800146c:	b538      	push	{r3, r4, r5, lr}
 800146e:	4d07      	ldr	r5, [pc, #28]	; (800148c <_fstat_r+0x20>)
 8001470:	2300      	movs	r3, #0
 8001472:	4604      	mov	r4, r0
 8001474:	4608      	mov	r0, r1
 8001476:	4611      	mov	r1, r2
 8001478:	602b      	str	r3, [r5, #0]
 800147a:	f7fe ffd0 	bl	800041e <_fstat>
 800147e:	1c43      	adds	r3, r0, #1
 8001480:	d102      	bne.n	8001488 <_fstat_r+0x1c>
 8001482:	682b      	ldr	r3, [r5, #0]
 8001484:	b103      	cbz	r3, 8001488 <_fstat_r+0x1c>
 8001486:	6023      	str	r3, [r4, #0]
 8001488:	bd38      	pop	{r3, r4, r5, pc}
 800148a:	bf00      	nop
 800148c:	20000090 	.word	0x20000090

08001490 <_isatty_r>:
 8001490:	b538      	push	{r3, r4, r5, lr}
 8001492:	4d06      	ldr	r5, [pc, #24]	; (80014ac <_isatty_r+0x1c>)
 8001494:	2300      	movs	r3, #0
 8001496:	4604      	mov	r4, r0
 8001498:	4608      	mov	r0, r1
 800149a:	602b      	str	r3, [r5, #0]
 800149c:	f7fe ffcf 	bl	800043e <_isatty>
 80014a0:	1c43      	adds	r3, r0, #1
 80014a2:	d102      	bne.n	80014aa <_isatty_r+0x1a>
 80014a4:	682b      	ldr	r3, [r5, #0]
 80014a6:	b103      	cbz	r3, 80014aa <_isatty_r+0x1a>
 80014a8:	6023      	str	r3, [r4, #0]
 80014aa:	bd38      	pop	{r3, r4, r5, pc}
 80014ac:	20000090 	.word	0x20000090

080014b0 <_init>:
 80014b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b2:	bf00      	nop
 80014b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014b6:	bc08      	pop	{r3}
 80014b8:	469e      	mov	lr, r3
 80014ba:	4770      	bx	lr

080014bc <_fini>:
 80014bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014be:	bf00      	nop
 80014c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014c2:	bc08      	pop	{r3}
 80014c4:	469e      	mov	lr, r3
 80014c6:	4770      	bx	lr
